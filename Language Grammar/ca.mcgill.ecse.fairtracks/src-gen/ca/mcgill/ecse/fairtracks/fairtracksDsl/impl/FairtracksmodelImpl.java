/**
 * generated by Xtext 2.12.0
 */
package ca.mcgill.ecse.fairtracks.fairtracksDsl.impl;

import ca.mcgill.ecse.fairtracks.fairtracksDsl.FTDistance;
import ca.mcgill.ecse.fairtracks.fairtracksDsl.FTStaticObject;
import ca.mcgill.ecse.fairtracks.fairtracksDsl.FairtracksDslPackage;
import ca.mcgill.ecse.fairtracks.fairtracksDsl.Fairtracksmodel;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Fairtracksmodel</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link ca.mcgill.ecse.fairtracks.fairtracksDsl.impl.FairtracksmodelImpl#getStaticObjects <em>Static Objects</em>}</li>
 *   <li>{@link ca.mcgill.ecse.fairtracks.fairtracksDsl.impl.FairtracksmodelImpl#getInitialDistances <em>Initial Distances</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FairtracksmodelImpl extends MinimalEObjectImpl.Container implements Fairtracksmodel
{
  /**
   * The cached value of the '{@link #getStaticObjects() <em>Static Objects</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStaticObjects()
   * @generated
   * @ordered
   */
  protected EList<FTStaticObject> staticObjects;

  /**
   * The cached value of the '{@link #getInitialDistances() <em>Initial Distances</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInitialDistances()
   * @generated
   * @ordered
   */
  protected EList<FTDistance> initialDistances;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FairtracksmodelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return FairtracksDslPackage.Literals.FAIRTRACKSMODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<FTStaticObject> getStaticObjects()
  {
    if (staticObjects == null)
    {
      staticObjects = new EObjectContainmentEList<FTStaticObject>(FTStaticObject.class, this, FairtracksDslPackage.FAIRTRACKSMODEL__STATIC_OBJECTS);
    }
    return staticObjects;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<FTDistance> getInitialDistances()
  {
    if (initialDistances == null)
    {
      initialDistances = new EObjectContainmentEList<FTDistance>(FTDistance.class, this, FairtracksDslPackage.FAIRTRACKSMODEL__INITIAL_DISTANCES);
    }
    return initialDistances;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case FairtracksDslPackage.FAIRTRACKSMODEL__STATIC_OBJECTS:
        return ((InternalEList<?>)getStaticObjects()).basicRemove(otherEnd, msgs);
      case FairtracksDslPackage.FAIRTRACKSMODEL__INITIAL_DISTANCES:
        return ((InternalEList<?>)getInitialDistances()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case FairtracksDslPackage.FAIRTRACKSMODEL__STATIC_OBJECTS:
        return getStaticObjects();
      case FairtracksDslPackage.FAIRTRACKSMODEL__INITIAL_DISTANCES:
        return getInitialDistances();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case FairtracksDslPackage.FAIRTRACKSMODEL__STATIC_OBJECTS:
        getStaticObjects().clear();
        getStaticObjects().addAll((Collection<? extends FTStaticObject>)newValue);
        return;
      case FairtracksDslPackage.FAIRTRACKSMODEL__INITIAL_DISTANCES:
        getInitialDistances().clear();
        getInitialDistances().addAll((Collection<? extends FTDistance>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case FairtracksDslPackage.FAIRTRACKSMODEL__STATIC_OBJECTS:
        getStaticObjects().clear();
        return;
      case FairtracksDslPackage.FAIRTRACKSMODEL__INITIAL_DISTANCES:
        getInitialDistances().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case FairtracksDslPackage.FAIRTRACKSMODEL__STATIC_OBJECTS:
        return staticObjects != null && !staticObjects.isEmpty();
      case FairtracksDslPackage.FAIRTRACKSMODEL__INITIAL_DISTANCES:
        return initialDistances != null && !initialDistances.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //FairtracksmodelImpl
