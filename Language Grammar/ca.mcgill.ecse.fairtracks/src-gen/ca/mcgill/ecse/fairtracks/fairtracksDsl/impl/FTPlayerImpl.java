/**
 * generated by Xtext 2.12.0
 */
package ca.mcgill.ecse.fairtracks.fairtracksDsl.impl;

import ca.mcgill.ecse.fairtracks.fairtracksDsl.FTPickUpColorClass;
import ca.mcgill.ecse.fairtracks.fairtracksDsl.FTPlayer;
import ca.mcgill.ecse.fairtracks.fairtracksDsl.FTRole;
import ca.mcgill.ecse.fairtracks.fairtracksDsl.FTZone;
import ca.mcgill.ecse.fairtracks.fairtracksDsl.FairtracksDslPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>FT Player</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link ca.mcgill.ecse.fairtracks.fairtracksDsl.impl.FTPlayerImpl#getRole <em>Role</em>}</li>
 *   <li>{@link ca.mcgill.ecse.fairtracks.fairtracksDsl.impl.FTPlayerImpl#getInitiallyInside <em>Initially Inside</em>}</li>
 *   <li>{@link ca.mcgill.ecse.fairtracks.fairtracksDsl.impl.FTPlayerImpl#isCanPickUpObject <em>Can Pick Up Object</em>}</li>
 *   <li>{@link ca.mcgill.ecse.fairtracks.fairtracksDsl.impl.FTPlayerImpl#getPickUpColor <em>Pick Up Color</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FTPlayerImpl extends FTObjectWithDistanceImpl implements FTPlayer
{
  /**
   * The default value of the '{@link #getRole() <em>Role</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRole()
   * @generated
   * @ordered
   */
  protected static final FTRole ROLE_EDEFAULT = FTRole.ATTACK;

  /**
   * The cached value of the '{@link #getRole() <em>Role</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRole()
   * @generated
   * @ordered
   */
  protected FTRole role = ROLE_EDEFAULT;

  /**
   * The cached value of the '{@link #getInitiallyInside() <em>Initially Inside</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInitiallyInside()
   * @generated
   * @ordered
   */
  protected FTZone initiallyInside;

  /**
   * The default value of the '{@link #isCanPickUpObject() <em>Can Pick Up Object</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isCanPickUpObject()
   * @generated
   * @ordered
   */
  protected static final boolean CAN_PICK_UP_OBJECT_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isCanPickUpObject() <em>Can Pick Up Object</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isCanPickUpObject()
   * @generated
   * @ordered
   */
  protected boolean canPickUpObject = CAN_PICK_UP_OBJECT_EDEFAULT;

  /**
   * The cached value of the '{@link #getPickUpColor() <em>Pick Up Color</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPickUpColor()
   * @generated
   * @ordered
   */
  protected EList<FTPickUpColorClass> pickUpColor;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FTPlayerImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return FairtracksDslPackage.Literals.FT_PLAYER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FTRole getRole()
  {
    return role;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRole(FTRole newRole)
  {
    FTRole oldRole = role;
    role = newRole == null ? ROLE_EDEFAULT : newRole;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FairtracksDslPackage.FT_PLAYER__ROLE, oldRole, role));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FTZone getInitiallyInside()
  {
    if (initiallyInside != null && initiallyInside.eIsProxy())
    {
      InternalEObject oldInitiallyInside = (InternalEObject)initiallyInside;
      initiallyInside = (FTZone)eResolveProxy(oldInitiallyInside);
      if (initiallyInside != oldInitiallyInside)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, FairtracksDslPackage.FT_PLAYER__INITIALLY_INSIDE, oldInitiallyInside, initiallyInside));
      }
    }
    return initiallyInside;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FTZone basicGetInitiallyInside()
  {
    return initiallyInside;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setInitiallyInside(FTZone newInitiallyInside)
  {
    FTZone oldInitiallyInside = initiallyInside;
    initiallyInside = newInitiallyInside;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FairtracksDslPackage.FT_PLAYER__INITIALLY_INSIDE, oldInitiallyInside, initiallyInside));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isCanPickUpObject()
  {
    return canPickUpObject;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCanPickUpObject(boolean newCanPickUpObject)
  {
    boolean oldCanPickUpObject = canPickUpObject;
    canPickUpObject = newCanPickUpObject;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FairtracksDslPackage.FT_PLAYER__CAN_PICK_UP_OBJECT, oldCanPickUpObject, canPickUpObject));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<FTPickUpColorClass> getPickUpColor()
  {
    if (pickUpColor == null)
    {
      pickUpColor = new EObjectContainmentEList<FTPickUpColorClass>(FTPickUpColorClass.class, this, FairtracksDslPackage.FT_PLAYER__PICK_UP_COLOR);
    }
    return pickUpColor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case FairtracksDslPackage.FT_PLAYER__PICK_UP_COLOR:
        return ((InternalEList<?>)getPickUpColor()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case FairtracksDslPackage.FT_PLAYER__ROLE:
        return getRole();
      case FairtracksDslPackage.FT_PLAYER__INITIALLY_INSIDE:
        if (resolve) return getInitiallyInside();
        return basicGetInitiallyInside();
      case FairtracksDslPackage.FT_PLAYER__CAN_PICK_UP_OBJECT:
        return isCanPickUpObject();
      case FairtracksDslPackage.FT_PLAYER__PICK_UP_COLOR:
        return getPickUpColor();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case FairtracksDslPackage.FT_PLAYER__ROLE:
        setRole((FTRole)newValue);
        return;
      case FairtracksDslPackage.FT_PLAYER__INITIALLY_INSIDE:
        setInitiallyInside((FTZone)newValue);
        return;
      case FairtracksDslPackage.FT_PLAYER__CAN_PICK_UP_OBJECT:
        setCanPickUpObject((Boolean)newValue);
        return;
      case FairtracksDslPackage.FT_PLAYER__PICK_UP_COLOR:
        getPickUpColor().clear();
        getPickUpColor().addAll((Collection<? extends FTPickUpColorClass>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case FairtracksDslPackage.FT_PLAYER__ROLE:
        setRole(ROLE_EDEFAULT);
        return;
      case FairtracksDslPackage.FT_PLAYER__INITIALLY_INSIDE:
        setInitiallyInside((FTZone)null);
        return;
      case FairtracksDslPackage.FT_PLAYER__CAN_PICK_UP_OBJECT:
        setCanPickUpObject(CAN_PICK_UP_OBJECT_EDEFAULT);
        return;
      case FairtracksDslPackage.FT_PLAYER__PICK_UP_COLOR:
        getPickUpColor().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case FairtracksDslPackage.FT_PLAYER__ROLE:
        return role != ROLE_EDEFAULT;
      case FairtracksDslPackage.FT_PLAYER__INITIALLY_INSIDE:
        return initiallyInside != null;
      case FairtracksDslPackage.FT_PLAYER__CAN_PICK_UP_OBJECT:
        return canPickUpObject != CAN_PICK_UP_OBJECT_EDEFAULT;
      case FairtracksDslPackage.FT_PLAYER__PICK_UP_COLOR:
        return pickUpColor != null && !pickUpColor.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (role: ");
    result.append(role);
    result.append(", canPickUpObject: ");
    result.append(canPickUpObject);
    result.append(')');
    return result.toString();
  }

} //FTPlayerImpl
