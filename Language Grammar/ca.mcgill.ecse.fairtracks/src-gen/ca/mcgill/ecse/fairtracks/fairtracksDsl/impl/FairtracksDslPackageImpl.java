/**
 * generated by Xtext 2.12.0
 */
package ca.mcgill.ecse.fairtracks.fairtracksDsl.impl;

import ca.mcgill.ecse.fairtracks.fairtracksDsl.FTDistance;
import ca.mcgill.ecse.fairtracks.fairtracksDsl.FTDistanceObs;
import ca.mcgill.ecse.fairtracks.fairtracksDsl.FTDistanceValue;
import ca.mcgill.ecse.fairtracks.fairtracksDsl.FTHangingObs;
import ca.mcgill.ecse.fairtracks.fairtracksDsl.FTObjectWithDistance;
import ca.mcgill.ecse.fairtracks.fairtracksDsl.FTObservation;
import ca.mcgill.ecse.fairtracks.fairtracksDsl.FTObstacle;
import ca.mcgill.ecse.fairtracks.fairtracksDsl.FTPickUpColor;
import ca.mcgill.ecse.fairtracks.fairtracksDsl.FTPickUpColorClass;
import ca.mcgill.ecse.fairtracks.fairtracksDsl.FTPickUpObs;
import ca.mcgill.ecse.fairtracks.fairtracksDsl.FTPlayer;
import ca.mcgill.ecse.fairtracks.fairtracksDsl.FTRealCoordinates;
import ca.mcgill.ecse.fairtracks.fairtracksDsl.FTRole;
import ca.mcgill.ecse.fairtracks.fairtracksDsl.FTSize;
import ca.mcgill.ecse.fairtracks.fairtracksDsl.FTState;
import ca.mcgill.ecse.fairtracks.fairtracksDsl.FTStaticObject;
import ca.mcgill.ecse.fairtracks.fairtracksDsl.FTTrajectory;
import ca.mcgill.ecse.fairtracks.fairtracksDsl.FTZipline;
import ca.mcgill.ecse.fairtracks.fairtracksDsl.FTZone;
import ca.mcgill.ecse.fairtracks.fairtracksDsl.FTZoneObs;
import ca.mcgill.ecse.fairtracks.fairtracksDsl.FTZoneType;
import ca.mcgill.ecse.fairtracks.fairtracksDsl.FairtracksDslFactory;
import ca.mcgill.ecse.fairtracks.fairtracksDsl.FairtracksDslPackage;
import ca.mcgill.ecse.fairtracks.fairtracksDsl.Fairtracksmodel;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class FairtracksDslPackageImpl extends EPackageImpl implements FairtracksDslPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fairtracksmodelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ftStaticObjectEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ftObjectWithDistanceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ftPlayerEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ftPickUpColorClassEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ftZoneEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ftObstacleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ftZiplineEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ftRealCoordinatesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ftDistanceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ftTrajectoryEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ftStateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ftObservationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ftDistanceObsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ftHangingObsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ftPickUpObsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ftZoneObsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum ftPickUpColorEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum ftRoleEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum ftZoneTypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum ftDistanceValueEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum ftSizeEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see ca.mcgill.ecse.fairtracks.fairtracksDsl.FairtracksDslPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private FairtracksDslPackageImpl()
  {
    super(eNS_URI, FairtracksDslFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link FairtracksDslPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static FairtracksDslPackage init()
  {
    if (isInited) return (FairtracksDslPackage)EPackage.Registry.INSTANCE.getEPackage(FairtracksDslPackage.eNS_URI);

    // Obtain or create and register package
    FairtracksDslPackageImpl theFairtracksDslPackage = (FairtracksDslPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof FairtracksDslPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new FairtracksDslPackageImpl());

    isInited = true;

    // Create package meta-data objects
    theFairtracksDslPackage.createPackageContents();

    // Initialize created meta-data
    theFairtracksDslPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theFairtracksDslPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(FairtracksDslPackage.eNS_URI, theFairtracksDslPackage);
    return theFairtracksDslPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFairtracksmodel()
  {
    return fairtracksmodelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFairtracksmodel_StaticObjects()
  {
    return (EReference)fairtracksmodelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFairtracksmodel_InitialDistances()
  {
    return (EReference)fairtracksmodelEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFTStaticObject()
  {
    return ftStaticObjectEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFTStaticObject_Name()
  {
    return (EAttribute)ftStaticObjectEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFTStaticObject_Size()
  {
    return (EAttribute)ftStaticObjectEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFTStaticObject_Coordinates()
  {
    return (EReference)ftStaticObjectEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFTObjectWithDistance()
  {
    return ftObjectWithDistanceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFTObjectWithDistance_DistanceClass()
  {
    return (EReference)ftObjectWithDistanceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFTPlayer()
  {
    return ftPlayerEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFTPlayer_Role()
  {
    return (EAttribute)ftPlayerEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFTPlayer_InitiallyInside()
  {
    return (EReference)ftPlayerEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFTPlayer_CanPickUpObject()
  {
    return (EAttribute)ftPlayerEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFTPlayer_PickUpColor()
  {
    return (EReference)ftPlayerEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFTPickUpColorClass()
  {
    return ftPickUpColorClassEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFTPickUpColorClass_Color()
  {
    return (EAttribute)ftPickUpColorClassEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFTZone()
  {
    return ftZoneEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFTZone_Type()
  {
    return (EAttribute)ftZoneEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFTZone_Contains()
  {
    return (EReference)ftZoneEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFTZone_PartiallyOverlaps()
  {
    return (EReference)ftZoneEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFTZone_IsAdjacentTo()
  {
    return (EReference)ftZoneEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFTZone_DisallowedPlayers()
  {
    return (EReference)ftZoneEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFTObstacle()
  {
    return ftObstacleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFTObstacle_IsMoveable()
  {
    return (EAttribute)ftObstacleEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFTObstacle_Color()
  {
    return (EAttribute)ftObstacleEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFTObstacle_InitiallyInside()
  {
    return (EReference)ftObstacleEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFTObstacle_DisallowedZones()
  {
    return (EReference)ftObstacleEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFTZipline()
  {
    return ftZiplineEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFTZipline_StartZone()
  {
    return (EReference)ftZiplineEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFTZipline_EndZone()
  {
    return (EReference)ftZiplineEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFTRealCoordinates()
  {
    return ftRealCoordinatesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFTRealCoordinates_PosX()
  {
    return (EAttribute)ftRealCoordinatesEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFTRealCoordinates_PosY()
  {
    return (EAttribute)ftRealCoordinatesEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFTRealCoordinates_SizeX()
  {
    return (EAttribute)ftRealCoordinatesEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFTRealCoordinates_SizeY()
  {
    return (EAttribute)ftRealCoordinatesEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFTDistance()
  {
    return ftDistanceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFTDistance_Distance()
  {
    return (EAttribute)ftDistanceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFTDistance_ToObject()
  {
    return (EReference)ftDistanceEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFTTrajectory()
  {
    return ftTrajectoryEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFTTrajectory_Player()
  {
    return (EReference)ftTrajectoryEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFTTrajectory_States()
  {
    return (EReference)ftTrajectoryEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFTState()
  {
    return ftStateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFTState_Name()
  {
    return (EAttribute)ftStateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFTState_PosX()
  {
    return (EAttribute)ftStateEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFTState_PosY()
  {
    return (EAttribute)ftStateEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFTState_Observations()
  {
    return (EReference)ftStateEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFTState_NextState()
  {
    return (EReference)ftStateEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFTObservation()
  {
    return ftObservationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFTDistanceObs()
  {
    return ftDistanceObsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFTDistanceObs_Distance()
  {
    return (EAttribute)ftDistanceObsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFTDistanceObs_Object()
  {
    return (EReference)ftDistanceObsEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFTHangingObs()
  {
    return ftHangingObsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFTHangingObs_Object()
  {
    return (EReference)ftHangingObsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFTPickUpObs()
  {
    return ftPickUpObsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFTPickUpObs_Object()
  {
    return (EReference)ftPickUpObsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFTZoneObs()
  {
    return ftZoneObsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFTZoneObs_Object()
  {
    return (EReference)ftZoneObsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getFTPickUpColor()
  {
    return ftPickUpColorEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getFTRole()
  {
    return ftRoleEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getFTZoneType()
  {
    return ftZoneTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getFTDistanceValue()
  {
    return ftDistanceValueEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getFTSize()
  {
    return ftSizeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FairtracksDslFactory getFairtracksDslFactory()
  {
    return (FairtracksDslFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    fairtracksmodelEClass = createEClass(FAIRTRACKSMODEL);
    createEReference(fairtracksmodelEClass, FAIRTRACKSMODEL__STATIC_OBJECTS);
    createEReference(fairtracksmodelEClass, FAIRTRACKSMODEL__INITIAL_DISTANCES);

    ftStaticObjectEClass = createEClass(FT_STATIC_OBJECT);
    createEAttribute(ftStaticObjectEClass, FT_STATIC_OBJECT__NAME);
    createEAttribute(ftStaticObjectEClass, FT_STATIC_OBJECT__SIZE);
    createEReference(ftStaticObjectEClass, FT_STATIC_OBJECT__COORDINATES);

    ftObjectWithDistanceEClass = createEClass(FT_OBJECT_WITH_DISTANCE);
    createEReference(ftObjectWithDistanceEClass, FT_OBJECT_WITH_DISTANCE__DISTANCE_CLASS);

    ftPlayerEClass = createEClass(FT_PLAYER);
    createEAttribute(ftPlayerEClass, FT_PLAYER__ROLE);
    createEReference(ftPlayerEClass, FT_PLAYER__INITIALLY_INSIDE);
    createEAttribute(ftPlayerEClass, FT_PLAYER__CAN_PICK_UP_OBJECT);
    createEReference(ftPlayerEClass, FT_PLAYER__PICK_UP_COLOR);

    ftPickUpColorClassEClass = createEClass(FT_PICK_UP_COLOR_CLASS);
    createEAttribute(ftPickUpColorClassEClass, FT_PICK_UP_COLOR_CLASS__COLOR);

    ftZoneEClass = createEClass(FT_ZONE);
    createEAttribute(ftZoneEClass, FT_ZONE__TYPE);
    createEReference(ftZoneEClass, FT_ZONE__CONTAINS);
    createEReference(ftZoneEClass, FT_ZONE__PARTIALLY_OVERLAPS);
    createEReference(ftZoneEClass, FT_ZONE__IS_ADJACENT_TO);
    createEReference(ftZoneEClass, FT_ZONE__DISALLOWED_PLAYERS);

    ftObstacleEClass = createEClass(FT_OBSTACLE);
    createEAttribute(ftObstacleEClass, FT_OBSTACLE__IS_MOVEABLE);
    createEAttribute(ftObstacleEClass, FT_OBSTACLE__COLOR);
    createEReference(ftObstacleEClass, FT_OBSTACLE__INITIALLY_INSIDE);
    createEReference(ftObstacleEClass, FT_OBSTACLE__DISALLOWED_ZONES);

    ftZiplineEClass = createEClass(FT_ZIPLINE);
    createEReference(ftZiplineEClass, FT_ZIPLINE__START_ZONE);
    createEReference(ftZiplineEClass, FT_ZIPLINE__END_ZONE);

    ftRealCoordinatesEClass = createEClass(FT_REAL_COORDINATES);
    createEAttribute(ftRealCoordinatesEClass, FT_REAL_COORDINATES__POS_X);
    createEAttribute(ftRealCoordinatesEClass, FT_REAL_COORDINATES__POS_Y);
    createEAttribute(ftRealCoordinatesEClass, FT_REAL_COORDINATES__SIZE_X);
    createEAttribute(ftRealCoordinatesEClass, FT_REAL_COORDINATES__SIZE_Y);

    ftDistanceEClass = createEClass(FT_DISTANCE);
    createEAttribute(ftDistanceEClass, FT_DISTANCE__DISTANCE);
    createEReference(ftDistanceEClass, FT_DISTANCE__TO_OBJECT);

    ftTrajectoryEClass = createEClass(FT_TRAJECTORY);
    createEReference(ftTrajectoryEClass, FT_TRAJECTORY__PLAYER);
    createEReference(ftTrajectoryEClass, FT_TRAJECTORY__STATES);

    ftStateEClass = createEClass(FT_STATE);
    createEAttribute(ftStateEClass, FT_STATE__NAME);
    createEAttribute(ftStateEClass, FT_STATE__POS_X);
    createEAttribute(ftStateEClass, FT_STATE__POS_Y);
    createEReference(ftStateEClass, FT_STATE__OBSERVATIONS);
    createEReference(ftStateEClass, FT_STATE__NEXT_STATE);

    ftObservationEClass = createEClass(FT_OBSERVATION);

    ftDistanceObsEClass = createEClass(FT_DISTANCE_OBS);
    createEAttribute(ftDistanceObsEClass, FT_DISTANCE_OBS__DISTANCE);
    createEReference(ftDistanceObsEClass, FT_DISTANCE_OBS__OBJECT);

    ftHangingObsEClass = createEClass(FT_HANGING_OBS);
    createEReference(ftHangingObsEClass, FT_HANGING_OBS__OBJECT);

    ftPickUpObsEClass = createEClass(FT_PICK_UP_OBS);
    createEReference(ftPickUpObsEClass, FT_PICK_UP_OBS__OBJECT);

    ftZoneObsEClass = createEClass(FT_ZONE_OBS);
    createEReference(ftZoneObsEClass, FT_ZONE_OBS__OBJECT);

    // Create enums
    ftPickUpColorEEnum = createEEnum(FT_PICK_UP_COLOR);
    ftRoleEEnum = createEEnum(FT_ROLE);
    ftZoneTypeEEnum = createEEnum(FT_ZONE_TYPE);
    ftDistanceValueEEnum = createEEnum(FT_DISTANCE_VALUE);
    ftSizeEEnum = createEEnum(FT_SIZE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    ftObjectWithDistanceEClass.getESuperTypes().add(this.getFTStaticObject());
    ftPlayerEClass.getESuperTypes().add(this.getFTObjectWithDistance());
    ftZoneEClass.getESuperTypes().add(this.getFTObjectWithDistance());
    ftObstacleEClass.getESuperTypes().add(this.getFTObjectWithDistance());
    ftZiplineEClass.getESuperTypes().add(this.getFTStaticObject());
    ftDistanceObsEClass.getESuperTypes().add(this.getFTObservation());
    ftHangingObsEClass.getESuperTypes().add(this.getFTObservation());
    ftPickUpObsEClass.getESuperTypes().add(this.getFTObservation());
    ftZoneObsEClass.getESuperTypes().add(this.getFTObservation());

    // Initialize classes and features; add operations and parameters
    initEClass(fairtracksmodelEClass, Fairtracksmodel.class, "Fairtracksmodel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFairtracksmodel_StaticObjects(), this.getFTStaticObject(), null, "staticObjects", null, 0, -1, Fairtracksmodel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFairtracksmodel_InitialDistances(), this.getFTDistance(), null, "initialDistances", null, 0, -1, Fairtracksmodel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ftStaticObjectEClass, FTStaticObject.class, "FTStaticObject", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFTStaticObject_Name(), ecorePackage.getEString(), "name", null, 0, 1, FTStaticObject.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFTStaticObject_Size(), this.getFTSize(), "size", null, 0, 1, FTStaticObject.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFTStaticObject_Coordinates(), this.getFTRealCoordinates(), null, "coordinates", null, 0, 1, FTStaticObject.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ftObjectWithDistanceEClass, FTObjectWithDistance.class, "FTObjectWithDistance", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFTObjectWithDistance_DistanceClass(), this.getFTDistance(), null, "distanceClass", null, 0, -1, FTObjectWithDistance.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ftPlayerEClass, FTPlayer.class, "FTPlayer", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFTPlayer_Role(), this.getFTRole(), "role", null, 0, 1, FTPlayer.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFTPlayer_InitiallyInside(), this.getFTZone(), null, "initiallyInside", null, 0, 1, FTPlayer.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFTPlayer_CanPickUpObject(), ecorePackage.getEBoolean(), "canPickUpObject", null, 0, 1, FTPlayer.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFTPlayer_PickUpColor(), this.getFTPickUpColorClass(), null, "pickUpColor", null, 0, -1, FTPlayer.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ftPickUpColorClassEClass, FTPickUpColorClass.class, "FTPickUpColorClass", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFTPickUpColorClass_Color(), this.getFTPickUpColor(), "color", null, 0, 1, FTPickUpColorClass.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ftZoneEClass, FTZone.class, "FTZone", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFTZone_Type(), this.getFTZoneType(), "type", null, 0, 1, FTZone.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFTZone_Contains(), this.getFTZone(), null, "contains", null, 0, -1, FTZone.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFTZone_PartiallyOverlaps(), this.getFTZone(), null, "partiallyOverlaps", null, 0, -1, FTZone.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFTZone_IsAdjacentTo(), this.getFTZone(), null, "isAdjacentTo", null, 0, -1, FTZone.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFTZone_DisallowedPlayers(), this.getFTPlayer(), null, "disallowedPlayers", null, 0, -1, FTZone.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ftObstacleEClass, FTObstacle.class, "FTObstacle", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFTObstacle_IsMoveable(), ecorePackage.getEBoolean(), "isMoveable", null, 0, 1, FTObstacle.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFTObstacle_Color(), this.getFTPickUpColor(), "color", null, 0, 1, FTObstacle.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFTObstacle_InitiallyInside(), this.getFTZone(), null, "initiallyInside", null, 0, 1, FTObstacle.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFTObstacle_DisallowedZones(), this.getFTZone(), null, "disallowedZones", null, 0, -1, FTObstacle.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ftZiplineEClass, FTZipline.class, "FTZipline", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFTZipline_StartZone(), this.getFTZone(), null, "startZone", null, 0, 1, FTZipline.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFTZipline_EndZone(), this.getFTZone(), null, "endZone", null, 0, 1, FTZipline.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ftRealCoordinatesEClass, FTRealCoordinates.class, "FTRealCoordinates", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFTRealCoordinates_PosX(), ecorePackage.getEInt(), "posX", null, 0, 1, FTRealCoordinates.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFTRealCoordinates_PosY(), ecorePackage.getEInt(), "posY", null, 0, 1, FTRealCoordinates.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFTRealCoordinates_SizeX(), ecorePackage.getEInt(), "sizeX", null, 0, 1, FTRealCoordinates.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFTRealCoordinates_SizeY(), ecorePackage.getEInt(), "sizeY", null, 0, 1, FTRealCoordinates.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ftDistanceEClass, FTDistance.class, "FTDistance", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFTDistance_Distance(), this.getFTDistanceValue(), "distance", null, 0, 1, FTDistance.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFTDistance_ToObject(), this.getFTObjectWithDistance(), null, "toObject", null, 0, 1, FTDistance.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ftTrajectoryEClass, FTTrajectory.class, "FTTrajectory", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFTTrajectory_Player(), this.getFTPlayer(), null, "player", null, 0, 1, FTTrajectory.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFTTrajectory_States(), this.getFTState(), null, "states", null, 0, -1, FTTrajectory.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ftStateEClass, FTState.class, "FTState", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFTState_Name(), ecorePackage.getEString(), "name", null, 0, 1, FTState.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFTState_PosX(), ecorePackage.getEInt(), "posX", null, 0, 1, FTState.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFTState_PosY(), ecorePackage.getEInt(), "posY", null, 0, 1, FTState.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFTState_Observations(), this.getFTObservation(), null, "observations", null, 0, -1, FTState.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFTState_NextState(), this.getFTState(), null, "nextState", null, 0, 1, FTState.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ftObservationEClass, FTObservation.class, "FTObservation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(ftDistanceObsEClass, FTDistanceObs.class, "FTDistanceObs", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFTDistanceObs_Distance(), this.getFTDistanceValue(), "distance", null, 0, 1, FTDistanceObs.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFTDistanceObs_Object(), this.getFTObjectWithDistance(), null, "object", null, 0, 1, FTDistanceObs.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ftHangingObsEClass, FTHangingObs.class, "FTHangingObs", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFTHangingObs_Object(), this.getFTZipline(), null, "object", null, 0, 1, FTHangingObs.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ftPickUpObsEClass, FTPickUpObs.class, "FTPickUpObs", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFTPickUpObs_Object(), this.getFTObstacle(), null, "object", null, 0, 1, FTPickUpObs.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ftZoneObsEClass, FTZoneObs.class, "FTZoneObs", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFTZoneObs_Object(), this.getFTZone(), null, "object", null, 0, 1, FTZoneObs.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(ftPickUpColorEEnum, FTPickUpColor.class, "FTPickUpColor");
    addEEnumLiteral(ftPickUpColorEEnum, FTPickUpColor.RED);
    addEEnumLiteral(ftPickUpColorEEnum, FTPickUpColor.BLUE);
    addEEnumLiteral(ftPickUpColorEEnum, FTPickUpColor.YELLOW);
    addEEnumLiteral(ftPickUpColorEEnum, FTPickUpColor.WHITE);
    addEEnumLiteral(ftPickUpColorEEnum, FTPickUpColor.OTHER);

    initEEnum(ftRoleEEnum, FTRole.class, "FTRole");
    addEEnumLiteral(ftRoleEEnum, FTRole.ATTACK);
    addEEnumLiteral(ftRoleEEnum, FTRole.DEFENSE);

    initEEnum(ftZoneTypeEEnum, FTZoneType.class, "FTZoneType");
    addEEnumLiteral(ftZoneTypeEEnum, FTZoneType.BACKGROUND);
    addEEnumLiteral(ftZoneTypeEEnum, FTZoneType.GREEN);
    addEEnumLiteral(ftZoneTypeEEnum, FTZoneType.RED);
    addEEnumLiteral(ftZoneTypeEEnum, FTZoneType.PASSAGE);
    addEEnumLiteral(ftZoneTypeEEnum, FTZoneType.BALL);
    addEEnumLiteral(ftZoneTypeEEnum, FTZoneType.SEARCH);
    addEEnumLiteral(ftZoneTypeEEnum, FTZoneType.START);
    addEEnumLiteral(ftZoneTypeEEnum, FTZoneType.ZIPLINE);

    initEEnum(ftDistanceValueEEnum, FTDistanceValue.class, "FTDistanceValue");
    addEEnumLiteral(ftDistanceValueEEnum, FTDistanceValue.VERY_FAR_FROM);
    addEEnumLiteral(ftDistanceValueEEnum, FTDistanceValue.FAR_FROM);
    addEEnumLiteral(ftDistanceValueEEnum, FTDistanceValue.CLOSE_TO);
    addEEnumLiteral(ftDistanceValueEEnum, FTDistanceValue.DANGEROUSLY_CLOSE_TO);

    initEEnum(ftSizeEEnum, FTSize.class, "FTSize");
    addEEnumLiteral(ftSizeEEnum, FTSize.POINT);
    addEEnumLiteral(ftSizeEEnum, FTSize.SMALL);
    addEEnumLiteral(ftSizeEEnum, FTSize.MEDIUM);
    addEEnumLiteral(ftSizeEEnum, FTSize.BIG);

    // Create resource
    createResource(eNS_URI);
  }

} //FairtracksDslPackageImpl
