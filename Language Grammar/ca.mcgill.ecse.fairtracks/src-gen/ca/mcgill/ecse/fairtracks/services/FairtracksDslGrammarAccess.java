/*
 * generated by Xtext 2.12.0
 */
package ca.mcgill.ecse.fairtracks.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class FairtracksDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class FairtracksmodelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ca.mcgill.ecse.fairtracks.FairtracksDsl.Fairtracksmodel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cStaticObjectsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cStaticObjectsFTStaticObjectParserRuleCall_0_0 = (RuleCall)cStaticObjectsAssignment_0.eContents().get(0);
		private final Assignment cInitialDistancesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cInitialDistancesFTDistanceParserRuleCall_1_0 = (RuleCall)cInitialDistancesAssignment_1.eContents().get(0);
		
		//Fairtracksmodel:
		//	staticObjects+=FTStaticObject*
		//	initialDistances+=FTDistance*
		//	//Dynamic
		//	//trajectories += FTTrajectory*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		////	"boardLowerBound" ":" boardLowerBound = INT ";"//INT supported
		////	"boardUpperBound" ":" boardUpperBound = INT ";"//INT supported
		////	"minDistanceFromCorneForBlock" ":" distanceFromCorner = INT ";"//INT supported
		////Temp
		////	players += FTPlayer+
		////	zones += FTZone+
		////	obstacles += FTObstacle*
		////	ziplines += FTZipline*
		//staticObjects+=FTStaticObject* initialDistances+=FTDistance*
		public Group getGroup() { return cGroup; }
		
		////	"boardLowerBound" ":" boardLowerBound = INT ";"//INT supported
		////	"boardUpperBound" ":" boardUpperBound = INT ";"//INT supported
		////	"minDistanceFromCorneForBlock" ":" distanceFromCorner = INT ";"//INT supported
		////Temp
		////	players += FTPlayer+
		////	zones += FTZone+
		////	obstacles += FTObstacle*
		////	ziplines += FTZipline*
		//staticObjects+=FTStaticObject*
		public Assignment getStaticObjectsAssignment_0() { return cStaticObjectsAssignment_0; }
		
		//FTStaticObject
		public RuleCall getStaticObjectsFTStaticObjectParserRuleCall_0_0() { return cStaticObjectsFTStaticObjectParserRuleCall_0_0; }
		
		//initialDistances+=FTDistance*
		public Assignment getInitialDistancesAssignment_1() { return cInitialDistancesAssignment_1; }
		
		//FTDistance
		public RuleCall getInitialDistancesFTDistanceParserRuleCall_1_0() { return cInitialDistancesFTDistanceParserRuleCall_1_0; }
	}
	public class FTStaticObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ca.mcgill.ecse.fairtracks.FairtracksDsl.FTStaticObject");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cFTObjectWithDistanceParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFTZiplineParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		////////////
		////Static Portion
		////////////
		//FTStaticObject:
		//	FTObjectWithDistance | FTZipline;
		@Override public ParserRule getRule() { return rule; }
		
		//FTObjectWithDistance | FTZipline
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//FTObjectWithDistance
		public RuleCall getFTObjectWithDistanceParserRuleCall_0() { return cFTObjectWithDistanceParserRuleCall_0; }
		
		//FTZipline
		public RuleCall getFTZiplineParserRuleCall_1() { return cFTZiplineParserRuleCall_1; }
	}
	public class FTObjectWithDistanceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ca.mcgill.ecse.fairtracks.FairtracksDsl.FTObjectWithDistance");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cFTPlayerParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFTZoneParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFTObstacleParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//FTObjectWithDistance:
		//	FTPlayer | FTZone | FTObstacle;
		@Override public ParserRule getRule() { return rule; }
		
		//FTPlayer | FTZone | FTObstacle
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//FTPlayer
		public RuleCall getFTPlayerParserRuleCall_0() { return cFTPlayerParserRuleCall_0; }
		
		//FTZone
		public RuleCall getFTZoneParserRuleCall_1() { return cFTZoneParserRuleCall_1; }
		
		//FTObstacle
		public RuleCall getFTObstacleParserRuleCall_2() { return cFTObstacleParserRuleCall_2; }
	}
	public class FTPlayerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ca.mcgill.ecse.fairtracks.FairtracksDsl.FTPlayer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPlayerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameIDTerminalRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cSizeKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cColonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cSizeAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cSizeFTSizeEnumRuleCall_9_0 = (RuleCall)cSizeAssignment_9.eContents().get(0);
		private final Keyword cSemicolonKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cRoleKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cColonKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cRoleAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cRoleFTRoleEnumRuleCall_13_0 = (RuleCall)cRoleAssignment_13.eContents().get(0);
		private final Keyword cSemicolonKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Group cGroup_15 = (Group)cGroup.eContents().get(15);
		private final Keyword cInsideKeyword_15_0 = (Keyword)cGroup_15.eContents().get(0);
		private final Keyword cColonKeyword_15_1 = (Keyword)cGroup_15.eContents().get(1);
		private final Assignment cInitiallyInsideAssignment_15_2 = (Assignment)cGroup_15.eContents().get(2);
		private final CrossReference cInitiallyInsideFTZoneCrossReference_15_2_0 = (CrossReference)cInitiallyInsideAssignment_15_2.eContents().get(0);
		private final RuleCall cInitiallyInsideFTZoneIDTerminalRuleCall_15_2_0_1 = (RuleCall)cInitiallyInsideFTZoneCrossReference_15_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_15_3 = (Keyword)cGroup_15.eContents().get(3);
		private final Group cGroup_16 = (Group)cGroup.eContents().get(16);
		private final Assignment cCanPickUpObjectAssignment_16_0 = (Assignment)cGroup_16.eContents().get(0);
		private final Keyword cCanPickUpObjectCanPickUpKeyword_16_0_0 = (Keyword)cCanPickUpObjectAssignment_16_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_16_1 = (Keyword)cGroup_16.eContents().get(1);
		private final Group cGroup_17 = (Group)cGroup.eContents().get(17);
		private final Keyword cPickUpColorKeyword_17_0 = (Keyword)cGroup_17.eContents().get(0);
		private final Keyword cColonKeyword_17_1 = (Keyword)cGroup_17.eContents().get(1);
		private final Assignment cPickUpColorAssignment_17_2 = (Assignment)cGroup_17.eContents().get(2);
		private final RuleCall cPickUpColorFTPickUpColorClassParserRuleCall_17_2_0 = (RuleCall)cPickUpColorAssignment_17_2.eContents().get(0);
		private final Group cGroup_17_3 = (Group)cGroup_17.eContents().get(3);
		private final Keyword cCommaKeyword_17_3_0 = (Keyword)cGroup_17_3.eContents().get(0);
		private final Assignment cPickUpColorAssignment_17_3_1 = (Assignment)cGroup_17_3.eContents().get(1);
		private final RuleCall cPickUpColorFTPickUpColorClassParserRuleCall_17_3_1_0 = (RuleCall)cPickUpColorAssignment_17_3_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_17_4 = (Keyword)cGroup_17.eContents().get(4);
		private final Group cGroup_18 = (Group)cGroup.eContents().get(18);
		private final Keyword cDistanceKeyword_18_0 = (Keyword)cGroup_18.eContents().get(0);
		private final Keyword cColonKeyword_18_1 = (Keyword)cGroup_18.eContents().get(1);
		private final Assignment cDistanceClassAssignment_18_2 = (Assignment)cGroup_18.eContents().get(2);
		private final RuleCall cDistanceClassFTDistanceParserRuleCall_18_2_0 = (RuleCall)cDistanceClassAssignment_18_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_18_3 = (Keyword)cGroup_18.eContents().get(3);
		private final Group cGroup_19 = (Group)cGroup.eContents().get(19);
		private final Keyword cRealKeyword_19_0 = (Keyword)cGroup_19.eContents().get(0);
		private final Keyword cCoordinatesKeyword_19_1 = (Keyword)cGroup_19.eContents().get(1);
		private final Keyword cColonKeyword_19_2 = (Keyword)cGroup_19.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_19_3 = (Keyword)cGroup_19.eContents().get(3);
		private final Assignment cCoordinatesAssignment_19_4 = (Assignment)cGroup_19.eContents().get(4);
		private final RuleCall cCoordinatesFTRealCoordinatesParserRuleCall_19_4_0 = (RuleCall)cCoordinatesAssignment_19_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_19_5 = (Keyword)cGroup_19.eContents().get(5);
		private final Keyword cRightCurlyBracketKeyword_20 = (Keyword)cGroup.eContents().get(20);
		
		//FTPlayer:
		//	"Player" "=" "{"
		//	"name" ":" name=ID ";"
		//	//	"size" ":" "(" lengthX = INT "," lengthY = INT ")" ";"//INT supported
		//	"size" ":" size=FTSize ";"
		//	//	position = FTPosition//INT supported
		//	"role" ":" role=FTRole ";" ("inside" ":" initiallyInside=[FTZone] ";")? (canPickUpObject?="canPickUp" ";")?
		//	("pickUpColor" ":" pickUpColor+=FTPickUpColorClass ("," pickUpColor+=FTPickUpColorClass)* ";")? ("distance" ":"
		//	distanceClass+=FTDistance ";")* ("Real" "Coordinates" ":" "[" coordinates=FTRealCoordinates "]")?
		//	"}";
		@Override public ParserRule getRule() { return rule; }
		
		//"Player" "=" "{" "name" ":" name=ID ";" //	"size" ":" "(" lengthX = INT "," lengthY = INT ")" ";"//INT supported
		//"size" ":" size=FTSize ";" //	position = FTPosition//INT supported
		//"role" ":" role=FTRole ";" ("inside" ":" initiallyInside=[FTZone] ";")? (canPickUpObject?="canPickUp" ";")?
		//("pickUpColor" ":" pickUpColor+=FTPickUpColorClass ("," pickUpColor+=FTPickUpColorClass)* ";")? ("distance" ":"
		//distanceClass+=FTDistance ";")* ("Real" "Coordinates" ":" "[" coordinates=FTRealCoordinates "]")? "}"
		public Group getGroup() { return cGroup; }
		
		//"Player"
		public Keyword getPlayerKeyword_0() { return cPlayerKeyword_0; }
		
		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//"name"
		public Keyword getNameKeyword_3() { return cNameKeyword_3; }
		
		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//name=ID
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_5_0() { return cNameIDTerminalRuleCall_5_0; }
		
		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
		
		////	"size" ":" "(" lengthX = INT "," lengthY = INT ")" ";"//INT supported
		//"size"
		public Keyword getSizeKeyword_7() { return cSizeKeyword_7; }
		
		//":"
		public Keyword getColonKeyword_8() { return cColonKeyword_8; }
		
		//size=FTSize
		public Assignment getSizeAssignment_9() { return cSizeAssignment_9; }
		
		//FTSize
		public RuleCall getSizeFTSizeEnumRuleCall_9_0() { return cSizeFTSizeEnumRuleCall_9_0; }
		
		//";"
		public Keyword getSemicolonKeyword_10() { return cSemicolonKeyword_10; }
		
		////	position = FTPosition//INT supported
		//"role"
		public Keyword getRoleKeyword_11() { return cRoleKeyword_11; }
		
		//":"
		public Keyword getColonKeyword_12() { return cColonKeyword_12; }
		
		//role=FTRole
		public Assignment getRoleAssignment_13() { return cRoleAssignment_13; }
		
		//FTRole
		public RuleCall getRoleFTRoleEnumRuleCall_13_0() { return cRoleFTRoleEnumRuleCall_13_0; }
		
		//";"
		public Keyword getSemicolonKeyword_14() { return cSemicolonKeyword_14; }
		
		//("inside" ":" initiallyInside=[FTZone] ";")?
		public Group getGroup_15() { return cGroup_15; }
		
		//"inside"
		public Keyword getInsideKeyword_15_0() { return cInsideKeyword_15_0; }
		
		//":"
		public Keyword getColonKeyword_15_1() { return cColonKeyword_15_1; }
		
		//initiallyInside=[FTZone]
		public Assignment getInitiallyInsideAssignment_15_2() { return cInitiallyInsideAssignment_15_2; }
		
		//[FTZone]
		public CrossReference getInitiallyInsideFTZoneCrossReference_15_2_0() { return cInitiallyInsideFTZoneCrossReference_15_2_0; }
		
		//ID
		public RuleCall getInitiallyInsideFTZoneIDTerminalRuleCall_15_2_0_1() { return cInitiallyInsideFTZoneIDTerminalRuleCall_15_2_0_1; }
		
		//";"
		public Keyword getSemicolonKeyword_15_3() { return cSemicolonKeyword_15_3; }
		
		//(canPickUpObject?="canPickUp" ";")?
		public Group getGroup_16() { return cGroup_16; }
		
		//canPickUpObject?="canPickUp"
		public Assignment getCanPickUpObjectAssignment_16_0() { return cCanPickUpObjectAssignment_16_0; }
		
		//"canPickUp"
		public Keyword getCanPickUpObjectCanPickUpKeyword_16_0_0() { return cCanPickUpObjectCanPickUpKeyword_16_0_0; }
		
		//";"
		public Keyword getSemicolonKeyword_16_1() { return cSemicolonKeyword_16_1; }
		
		//("pickUpColor" ":" pickUpColor+=FTPickUpColorClass ("," pickUpColor+=FTPickUpColorClass)* ";")?
		public Group getGroup_17() { return cGroup_17; }
		
		//"pickUpColor"
		public Keyword getPickUpColorKeyword_17_0() { return cPickUpColorKeyword_17_0; }
		
		//":"
		public Keyword getColonKeyword_17_1() { return cColonKeyword_17_1; }
		
		//pickUpColor+=FTPickUpColorClass
		public Assignment getPickUpColorAssignment_17_2() { return cPickUpColorAssignment_17_2; }
		
		//FTPickUpColorClass
		public RuleCall getPickUpColorFTPickUpColorClassParserRuleCall_17_2_0() { return cPickUpColorFTPickUpColorClassParserRuleCall_17_2_0; }
		
		//("," pickUpColor+=FTPickUpColorClass)*
		public Group getGroup_17_3() { return cGroup_17_3; }
		
		//","
		public Keyword getCommaKeyword_17_3_0() { return cCommaKeyword_17_3_0; }
		
		//pickUpColor+=FTPickUpColorClass
		public Assignment getPickUpColorAssignment_17_3_1() { return cPickUpColorAssignment_17_3_1; }
		
		//FTPickUpColorClass
		public RuleCall getPickUpColorFTPickUpColorClassParserRuleCall_17_3_1_0() { return cPickUpColorFTPickUpColorClassParserRuleCall_17_3_1_0; }
		
		//";"
		public Keyword getSemicolonKeyword_17_4() { return cSemicolonKeyword_17_4; }
		
		//("distance" ":" distanceClass+=FTDistance ";")*
		public Group getGroup_18() { return cGroup_18; }
		
		//"distance"
		public Keyword getDistanceKeyword_18_0() { return cDistanceKeyword_18_0; }
		
		//":"
		public Keyword getColonKeyword_18_1() { return cColonKeyword_18_1; }
		
		//distanceClass+=FTDistance
		public Assignment getDistanceClassAssignment_18_2() { return cDistanceClassAssignment_18_2; }
		
		//FTDistance
		public RuleCall getDistanceClassFTDistanceParserRuleCall_18_2_0() { return cDistanceClassFTDistanceParserRuleCall_18_2_0; }
		
		//";"
		public Keyword getSemicolonKeyword_18_3() { return cSemicolonKeyword_18_3; }
		
		//("Real" "Coordinates" ":" "[" coordinates=FTRealCoordinates "]")?
		public Group getGroup_19() { return cGroup_19; }
		
		//"Real"
		public Keyword getRealKeyword_19_0() { return cRealKeyword_19_0; }
		
		//"Coordinates"
		public Keyword getCoordinatesKeyword_19_1() { return cCoordinatesKeyword_19_1; }
		
		//":"
		public Keyword getColonKeyword_19_2() { return cColonKeyword_19_2; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_19_3() { return cLeftSquareBracketKeyword_19_3; }
		
		//coordinates=FTRealCoordinates
		public Assignment getCoordinatesAssignment_19_4() { return cCoordinatesAssignment_19_4; }
		
		//FTRealCoordinates
		public RuleCall getCoordinatesFTRealCoordinatesParserRuleCall_19_4_0() { return cCoordinatesFTRealCoordinatesParserRuleCall_19_4_0; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_19_5() { return cRightSquareBracketKeyword_19_5; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_20() { return cRightCurlyBracketKeyword_20; }
	}
	public class FTPickUpColorClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ca.mcgill.ecse.fairtracks.FairtracksDsl.FTPickUpColorClass");
		private final Assignment cColorAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cColorFTPickUpColorEnumRuleCall_0 = (RuleCall)cColorAssignment.eContents().get(0);
		
		//FTPickUpColorClass:
		//	color=FTPickUpColor;
		@Override public ParserRule getRule() { return rule; }
		
		//color=FTPickUpColor
		public Assignment getColorAssignment() { return cColorAssignment; }
		
		//FTPickUpColor
		public RuleCall getColorFTPickUpColorEnumRuleCall_0() { return cColorFTPickUpColorEnumRuleCall_0; }
	}
	public class FTZoneElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ca.mcgill.ecse.fairtracks.FairtracksDsl.FTZone");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cZoneKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameIDTerminalRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cSizeKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cColonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cSizeAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cSizeFTSizeEnumRuleCall_9_0 = (RuleCall)cSizeAssignment_9.eContents().get(0);
		private final Keyword cSemicolonKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cZoneTypeKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cColonKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cTypeAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cTypeFTZoneTypeEnumRuleCall_13_0 = (RuleCall)cTypeAssignment_13.eContents().get(0);
		private final Keyword cSemicolonKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Group cGroup_15 = (Group)cGroup.eContents().get(15);
		private final Keyword cContainsKeyword_15_0 = (Keyword)cGroup_15.eContents().get(0);
		private final Keyword cColonKeyword_15_1 = (Keyword)cGroup_15.eContents().get(1);
		private final Assignment cContainsAssignment_15_2 = (Assignment)cGroup_15.eContents().get(2);
		private final CrossReference cContainsFTZoneCrossReference_15_2_0 = (CrossReference)cContainsAssignment_15_2.eContents().get(0);
		private final RuleCall cContainsFTZoneIDTerminalRuleCall_15_2_0_1 = (RuleCall)cContainsFTZoneCrossReference_15_2_0.eContents().get(1);
		private final Group cGroup_15_3 = (Group)cGroup_15.eContents().get(3);
		private final Keyword cCommaKeyword_15_3_0 = (Keyword)cGroup_15_3.eContents().get(0);
		private final Assignment cContainsAssignment_15_3_1 = (Assignment)cGroup_15_3.eContents().get(1);
		private final CrossReference cContainsFTZoneCrossReference_15_3_1_0 = (CrossReference)cContainsAssignment_15_3_1.eContents().get(0);
		private final RuleCall cContainsFTZoneIDTerminalRuleCall_15_3_1_0_1 = (RuleCall)cContainsFTZoneCrossReference_15_3_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_15_4 = (Keyword)cGroup_15.eContents().get(4);
		private final Group cGroup_16 = (Group)cGroup.eContents().get(16);
		private final Keyword cPartiallyOverlapsKeyword_16_0 = (Keyword)cGroup_16.eContents().get(0);
		private final Keyword cColonKeyword_16_1 = (Keyword)cGroup_16.eContents().get(1);
		private final Assignment cPartiallyOverlapsAssignment_16_2 = (Assignment)cGroup_16.eContents().get(2);
		private final CrossReference cPartiallyOverlapsFTZoneCrossReference_16_2_0 = (CrossReference)cPartiallyOverlapsAssignment_16_2.eContents().get(0);
		private final RuleCall cPartiallyOverlapsFTZoneIDTerminalRuleCall_16_2_0_1 = (RuleCall)cPartiallyOverlapsFTZoneCrossReference_16_2_0.eContents().get(1);
		private final Group cGroup_16_3 = (Group)cGroup_16.eContents().get(3);
		private final Keyword cCommaKeyword_16_3_0 = (Keyword)cGroup_16_3.eContents().get(0);
		private final Assignment cPartiallyOverlapsAssignment_16_3_1 = (Assignment)cGroup_16_3.eContents().get(1);
		private final CrossReference cPartiallyOverlapsFTZoneCrossReference_16_3_1_0 = (CrossReference)cPartiallyOverlapsAssignment_16_3_1.eContents().get(0);
		private final RuleCall cPartiallyOverlapsFTZoneIDTerminalRuleCall_16_3_1_0_1 = (RuleCall)cPartiallyOverlapsFTZoneCrossReference_16_3_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_16_4 = (Keyword)cGroup_16.eContents().get(4);
		private final Group cGroup_17 = (Group)cGroup.eContents().get(17);
		private final Keyword cIsAdjacentToKeyword_17_0 = (Keyword)cGroup_17.eContents().get(0);
		private final Keyword cColonKeyword_17_1 = (Keyword)cGroup_17.eContents().get(1);
		private final Assignment cIsAdjacentToAssignment_17_2 = (Assignment)cGroup_17.eContents().get(2);
		private final CrossReference cIsAdjacentToFTZoneCrossReference_17_2_0 = (CrossReference)cIsAdjacentToAssignment_17_2.eContents().get(0);
		private final RuleCall cIsAdjacentToFTZoneIDTerminalRuleCall_17_2_0_1 = (RuleCall)cIsAdjacentToFTZoneCrossReference_17_2_0.eContents().get(1);
		private final Group cGroup_17_3 = (Group)cGroup_17.eContents().get(3);
		private final Keyword cCommaKeyword_17_3_0 = (Keyword)cGroup_17_3.eContents().get(0);
		private final Assignment cIsAdjacentToAssignment_17_3_1 = (Assignment)cGroup_17_3.eContents().get(1);
		private final CrossReference cIsAdjacentToFTZoneCrossReference_17_3_1_0 = (CrossReference)cIsAdjacentToAssignment_17_3_1.eContents().get(0);
		private final RuleCall cIsAdjacentToFTZoneIDTerminalRuleCall_17_3_1_0_1 = (RuleCall)cIsAdjacentToFTZoneCrossReference_17_3_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_17_4 = (Keyword)cGroup_17.eContents().get(4);
		private final Group cGroup_18 = (Group)cGroup.eContents().get(18);
		private final Keyword cDisallowedPlayersKeyword_18_0 = (Keyword)cGroup_18.eContents().get(0);
		private final Keyword cColonKeyword_18_1 = (Keyword)cGroup_18.eContents().get(1);
		private final Assignment cDisallowedPlayersAssignment_18_2 = (Assignment)cGroup_18.eContents().get(2);
		private final CrossReference cDisallowedPlayersFTPlayerCrossReference_18_2_0 = (CrossReference)cDisallowedPlayersAssignment_18_2.eContents().get(0);
		private final RuleCall cDisallowedPlayersFTPlayerIDTerminalRuleCall_18_2_0_1 = (RuleCall)cDisallowedPlayersFTPlayerCrossReference_18_2_0.eContents().get(1);
		private final Group cGroup_18_3 = (Group)cGroup_18.eContents().get(3);
		private final Keyword cCommaKeyword_18_3_0 = (Keyword)cGroup_18_3.eContents().get(0);
		private final Assignment cDisallowedPlayersAssignment_18_3_1 = (Assignment)cGroup_18_3.eContents().get(1);
		private final CrossReference cDisallowedPlayersFTPlayerCrossReference_18_3_1_0 = (CrossReference)cDisallowedPlayersAssignment_18_3_1.eContents().get(0);
		private final RuleCall cDisallowedPlayersFTPlayerIDTerminalRuleCall_18_3_1_0_1 = (RuleCall)cDisallowedPlayersFTPlayerCrossReference_18_3_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_18_4 = (Keyword)cGroup_18.eContents().get(4);
		private final Group cGroup_19 = (Group)cGroup.eContents().get(19);
		private final Keyword cDistanceKeyword_19_0 = (Keyword)cGroup_19.eContents().get(0);
		private final Keyword cColonKeyword_19_1 = (Keyword)cGroup_19.eContents().get(1);
		private final Assignment cDistanceClassAssignment_19_2 = (Assignment)cGroup_19.eContents().get(2);
		private final RuleCall cDistanceClassFTDistanceParserRuleCall_19_2_0 = (RuleCall)cDistanceClassAssignment_19_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_19_3 = (Keyword)cGroup_19.eContents().get(3);
		private final Group cGroup_20 = (Group)cGroup.eContents().get(20);
		private final Keyword cRealKeyword_20_0 = (Keyword)cGroup_20.eContents().get(0);
		private final Keyword cCoordinatesKeyword_20_1 = (Keyword)cGroup_20.eContents().get(1);
		private final Keyword cColonKeyword_20_2 = (Keyword)cGroup_20.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_20_3 = (Keyword)cGroup_20.eContents().get(3);
		private final Assignment cCoordinatesAssignment_20_4 = (Assignment)cGroup_20.eContents().get(4);
		private final RuleCall cCoordinatesFTRealCoordinatesParserRuleCall_20_4_0 = (RuleCall)cCoordinatesAssignment_20_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_20_5 = (Keyword)cGroup_20.eContents().get(5);
		private final Keyword cRightCurlyBracketKeyword_21 = (Keyword)cGroup.eContents().get(21);
		
		//FTZone:
		//	"Zone" "=" "{"
		//	"name" ":" name=ID ";"
		//	//	"size" ":" "(" lengthX = INT "," lengthY = INT ")" ";"//INT supported
		//	"size" ":" size=FTSize ";"
		//	//	position = FTPosition//INT supported
		//	"zoneType" ":" type=FTZoneType ";" ("contains" ":" contains+=[FTZone] ("," contains+=[FTZone])* ";")?
		//	("partiallyOverlaps" ":" partiallyOverlaps+=[FTZone] ("," partiallyOverlaps+=[FTZone])* ";")? ("isAdjacentTo" ":"
		//	isAdjacentTo+=[FTZone] ("," isAdjacentTo+=[FTZone])* ";")? ("disallowedPlayers" ":" disallowedPlayers+=[FTPlayer]
		//	("," disallowedPlayers+=[FTPlayer])* ";")? ("distance" ":" distanceClass+=FTDistance ";")* ("Real" "Coordinates" ":"
		//	"[" coordinates=FTRealCoordinates "]")?
		//	"}";
		@Override public ParserRule getRule() { return rule; }
		
		//"Zone" "=" "{" "name" ":" name=ID ";" //	"size" ":" "(" lengthX = INT "," lengthY = INT ")" ";"//INT supported
		//"size" ":" size=FTSize ";" //	position = FTPosition//INT supported
		//"zoneType" ":" type=FTZoneType ";" ("contains" ":" contains+=[FTZone] ("," contains+=[FTZone])* ";")?
		//("partiallyOverlaps" ":" partiallyOverlaps+=[FTZone] ("," partiallyOverlaps+=[FTZone])* ";")? ("isAdjacentTo" ":"
		//isAdjacentTo+=[FTZone] ("," isAdjacentTo+=[FTZone])* ";")? ("disallowedPlayers" ":" disallowedPlayers+=[FTPlayer] (","
		//disallowedPlayers+=[FTPlayer])* ";")? ("distance" ":" distanceClass+=FTDistance ";")* ("Real" "Coordinates" ":" "["
		//coordinates=FTRealCoordinates "]")? "}"
		public Group getGroup() { return cGroup; }
		
		//"Zone"
		public Keyword getZoneKeyword_0() { return cZoneKeyword_0; }
		
		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//"name"
		public Keyword getNameKeyword_3() { return cNameKeyword_3; }
		
		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//name=ID
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_5_0() { return cNameIDTerminalRuleCall_5_0; }
		
		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
		
		////	"size" ":" "(" lengthX = INT "," lengthY = INT ")" ";"//INT supported
		//"size"
		public Keyword getSizeKeyword_7() { return cSizeKeyword_7; }
		
		//":"
		public Keyword getColonKeyword_8() { return cColonKeyword_8; }
		
		//size=FTSize
		public Assignment getSizeAssignment_9() { return cSizeAssignment_9; }
		
		//FTSize
		public RuleCall getSizeFTSizeEnumRuleCall_9_0() { return cSizeFTSizeEnumRuleCall_9_0; }
		
		//";"
		public Keyword getSemicolonKeyword_10() { return cSemicolonKeyword_10; }
		
		////	position = FTPosition//INT supported
		//"zoneType"
		public Keyword getZoneTypeKeyword_11() { return cZoneTypeKeyword_11; }
		
		//":"
		public Keyword getColonKeyword_12() { return cColonKeyword_12; }
		
		//type=FTZoneType
		public Assignment getTypeAssignment_13() { return cTypeAssignment_13; }
		
		//FTZoneType
		public RuleCall getTypeFTZoneTypeEnumRuleCall_13_0() { return cTypeFTZoneTypeEnumRuleCall_13_0; }
		
		//";"
		public Keyword getSemicolonKeyword_14() { return cSemicolonKeyword_14; }
		
		//("contains" ":" contains+=[FTZone] ("," contains+=[FTZone])* ";")?
		public Group getGroup_15() { return cGroup_15; }
		
		//"contains"
		public Keyword getContainsKeyword_15_0() { return cContainsKeyword_15_0; }
		
		//":"
		public Keyword getColonKeyword_15_1() { return cColonKeyword_15_1; }
		
		//contains+=[FTZone]
		public Assignment getContainsAssignment_15_2() { return cContainsAssignment_15_2; }
		
		//[FTZone]
		public CrossReference getContainsFTZoneCrossReference_15_2_0() { return cContainsFTZoneCrossReference_15_2_0; }
		
		//ID
		public RuleCall getContainsFTZoneIDTerminalRuleCall_15_2_0_1() { return cContainsFTZoneIDTerminalRuleCall_15_2_0_1; }
		
		//("," contains+=[FTZone])*
		public Group getGroup_15_3() { return cGroup_15_3; }
		
		//","
		public Keyword getCommaKeyword_15_3_0() { return cCommaKeyword_15_3_0; }
		
		//contains+=[FTZone]
		public Assignment getContainsAssignment_15_3_1() { return cContainsAssignment_15_3_1; }
		
		//[FTZone]
		public CrossReference getContainsFTZoneCrossReference_15_3_1_0() { return cContainsFTZoneCrossReference_15_3_1_0; }
		
		//ID
		public RuleCall getContainsFTZoneIDTerminalRuleCall_15_3_1_0_1() { return cContainsFTZoneIDTerminalRuleCall_15_3_1_0_1; }
		
		//";"
		public Keyword getSemicolonKeyword_15_4() { return cSemicolonKeyword_15_4; }
		
		//("partiallyOverlaps" ":" partiallyOverlaps+=[FTZone] ("," partiallyOverlaps+=[FTZone])* ";")?
		public Group getGroup_16() { return cGroup_16; }
		
		//"partiallyOverlaps"
		public Keyword getPartiallyOverlapsKeyword_16_0() { return cPartiallyOverlapsKeyword_16_0; }
		
		//":"
		public Keyword getColonKeyword_16_1() { return cColonKeyword_16_1; }
		
		//partiallyOverlaps+=[FTZone]
		public Assignment getPartiallyOverlapsAssignment_16_2() { return cPartiallyOverlapsAssignment_16_2; }
		
		//[FTZone]
		public CrossReference getPartiallyOverlapsFTZoneCrossReference_16_2_0() { return cPartiallyOverlapsFTZoneCrossReference_16_2_0; }
		
		//ID
		public RuleCall getPartiallyOverlapsFTZoneIDTerminalRuleCall_16_2_0_1() { return cPartiallyOverlapsFTZoneIDTerminalRuleCall_16_2_0_1; }
		
		//("," partiallyOverlaps+=[FTZone])*
		public Group getGroup_16_3() { return cGroup_16_3; }
		
		//","
		public Keyword getCommaKeyword_16_3_0() { return cCommaKeyword_16_3_0; }
		
		//partiallyOverlaps+=[FTZone]
		public Assignment getPartiallyOverlapsAssignment_16_3_1() { return cPartiallyOverlapsAssignment_16_3_1; }
		
		//[FTZone]
		public CrossReference getPartiallyOverlapsFTZoneCrossReference_16_3_1_0() { return cPartiallyOverlapsFTZoneCrossReference_16_3_1_0; }
		
		//ID
		public RuleCall getPartiallyOverlapsFTZoneIDTerminalRuleCall_16_3_1_0_1() { return cPartiallyOverlapsFTZoneIDTerminalRuleCall_16_3_1_0_1; }
		
		//";"
		public Keyword getSemicolonKeyword_16_4() { return cSemicolonKeyword_16_4; }
		
		//("isAdjacentTo" ":" isAdjacentTo+=[FTZone] ("," isAdjacentTo+=[FTZone])* ";")?
		public Group getGroup_17() { return cGroup_17; }
		
		//"isAdjacentTo"
		public Keyword getIsAdjacentToKeyword_17_0() { return cIsAdjacentToKeyword_17_0; }
		
		//":"
		public Keyword getColonKeyword_17_1() { return cColonKeyword_17_1; }
		
		//isAdjacentTo+=[FTZone]
		public Assignment getIsAdjacentToAssignment_17_2() { return cIsAdjacentToAssignment_17_2; }
		
		//[FTZone]
		public CrossReference getIsAdjacentToFTZoneCrossReference_17_2_0() { return cIsAdjacentToFTZoneCrossReference_17_2_0; }
		
		//ID
		public RuleCall getIsAdjacentToFTZoneIDTerminalRuleCall_17_2_0_1() { return cIsAdjacentToFTZoneIDTerminalRuleCall_17_2_0_1; }
		
		//("," isAdjacentTo+=[FTZone])*
		public Group getGroup_17_3() { return cGroup_17_3; }
		
		//","
		public Keyword getCommaKeyword_17_3_0() { return cCommaKeyword_17_3_0; }
		
		//isAdjacentTo+=[FTZone]
		public Assignment getIsAdjacentToAssignment_17_3_1() { return cIsAdjacentToAssignment_17_3_1; }
		
		//[FTZone]
		public CrossReference getIsAdjacentToFTZoneCrossReference_17_3_1_0() { return cIsAdjacentToFTZoneCrossReference_17_3_1_0; }
		
		//ID
		public RuleCall getIsAdjacentToFTZoneIDTerminalRuleCall_17_3_1_0_1() { return cIsAdjacentToFTZoneIDTerminalRuleCall_17_3_1_0_1; }
		
		//";"
		public Keyword getSemicolonKeyword_17_4() { return cSemicolonKeyword_17_4; }
		
		//("disallowedPlayers" ":" disallowedPlayers+=[FTPlayer] ("," disallowedPlayers+=[FTPlayer])* ";")?
		public Group getGroup_18() { return cGroup_18; }
		
		//"disallowedPlayers"
		public Keyword getDisallowedPlayersKeyword_18_0() { return cDisallowedPlayersKeyword_18_0; }
		
		//":"
		public Keyword getColonKeyword_18_1() { return cColonKeyword_18_1; }
		
		//disallowedPlayers+=[FTPlayer]
		public Assignment getDisallowedPlayersAssignment_18_2() { return cDisallowedPlayersAssignment_18_2; }
		
		//[FTPlayer]
		public CrossReference getDisallowedPlayersFTPlayerCrossReference_18_2_0() { return cDisallowedPlayersFTPlayerCrossReference_18_2_0; }
		
		//ID
		public RuleCall getDisallowedPlayersFTPlayerIDTerminalRuleCall_18_2_0_1() { return cDisallowedPlayersFTPlayerIDTerminalRuleCall_18_2_0_1; }
		
		//("," disallowedPlayers+=[FTPlayer])*
		public Group getGroup_18_3() { return cGroup_18_3; }
		
		//","
		public Keyword getCommaKeyword_18_3_0() { return cCommaKeyword_18_3_0; }
		
		//disallowedPlayers+=[FTPlayer]
		public Assignment getDisallowedPlayersAssignment_18_3_1() { return cDisallowedPlayersAssignment_18_3_1; }
		
		//[FTPlayer]
		public CrossReference getDisallowedPlayersFTPlayerCrossReference_18_3_1_0() { return cDisallowedPlayersFTPlayerCrossReference_18_3_1_0; }
		
		//ID
		public RuleCall getDisallowedPlayersFTPlayerIDTerminalRuleCall_18_3_1_0_1() { return cDisallowedPlayersFTPlayerIDTerminalRuleCall_18_3_1_0_1; }
		
		//";"
		public Keyword getSemicolonKeyword_18_4() { return cSemicolonKeyword_18_4; }
		
		//("distance" ":" distanceClass+=FTDistance ";")*
		public Group getGroup_19() { return cGroup_19; }
		
		//"distance"
		public Keyword getDistanceKeyword_19_0() { return cDistanceKeyword_19_0; }
		
		//":"
		public Keyword getColonKeyword_19_1() { return cColonKeyword_19_1; }
		
		//distanceClass+=FTDistance
		public Assignment getDistanceClassAssignment_19_2() { return cDistanceClassAssignment_19_2; }
		
		//FTDistance
		public RuleCall getDistanceClassFTDistanceParserRuleCall_19_2_0() { return cDistanceClassFTDistanceParserRuleCall_19_2_0; }
		
		//";"
		public Keyword getSemicolonKeyword_19_3() { return cSemicolonKeyword_19_3; }
		
		//("Real" "Coordinates" ":" "[" coordinates=FTRealCoordinates "]")?
		public Group getGroup_20() { return cGroup_20; }
		
		//"Real"
		public Keyword getRealKeyword_20_0() { return cRealKeyword_20_0; }
		
		//"Coordinates"
		public Keyword getCoordinatesKeyword_20_1() { return cCoordinatesKeyword_20_1; }
		
		//":"
		public Keyword getColonKeyword_20_2() { return cColonKeyword_20_2; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_20_3() { return cLeftSquareBracketKeyword_20_3; }
		
		//coordinates=FTRealCoordinates
		public Assignment getCoordinatesAssignment_20_4() { return cCoordinatesAssignment_20_4; }
		
		//FTRealCoordinates
		public RuleCall getCoordinatesFTRealCoordinatesParserRuleCall_20_4_0() { return cCoordinatesFTRealCoordinatesParserRuleCall_20_4_0; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_20_5() { return cRightSquareBracketKeyword_20_5; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_21() { return cRightCurlyBracketKeyword_21; }
	}
	public class FTObstacleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ca.mcgill.ecse.fairtracks.FairtracksDsl.FTObstacle");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cObstacleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameIDTerminalRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cSizeKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cColonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cSizeAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cSizeFTSizeEnumRuleCall_9_0 = (RuleCall)cSizeAssignment_9.eContents().get(0);
		private final Keyword cSemicolonKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Assignment cIsMoveableAssignment_11_0 = (Assignment)cGroup_11.eContents().get(0);
		private final Keyword cIsMoveableIsMoveableKeyword_11_0_0 = (Keyword)cIsMoveableAssignment_11_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Keyword cColorKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cColonKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cColorAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cColorFTPickUpColorEnumRuleCall_14_0 = (RuleCall)cColorAssignment_14.eContents().get(0);
		private final Keyword cSemicolonKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Group cGroup_16 = (Group)cGroup.eContents().get(16);
		private final Keyword cInsideKeyword_16_0 = (Keyword)cGroup_16.eContents().get(0);
		private final Keyword cColonKeyword_16_1 = (Keyword)cGroup_16.eContents().get(1);
		private final Assignment cInitiallyInsideAssignment_16_2 = (Assignment)cGroup_16.eContents().get(2);
		private final CrossReference cInitiallyInsideFTZoneCrossReference_16_2_0 = (CrossReference)cInitiallyInsideAssignment_16_2.eContents().get(0);
		private final RuleCall cInitiallyInsideFTZoneIDTerminalRuleCall_16_2_0_1 = (RuleCall)cInitiallyInsideFTZoneCrossReference_16_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_16_3 = (Keyword)cGroup_16.eContents().get(3);
		private final Group cGroup_17 = (Group)cGroup.eContents().get(17);
		private final Keyword cDisallowedZonesKeyword_17_0 = (Keyword)cGroup_17.eContents().get(0);
		private final Keyword cColonKeyword_17_1 = (Keyword)cGroup_17.eContents().get(1);
		private final Assignment cDisallowedZonesAssignment_17_2 = (Assignment)cGroup_17.eContents().get(2);
		private final CrossReference cDisallowedZonesFTZoneCrossReference_17_2_0 = (CrossReference)cDisallowedZonesAssignment_17_2.eContents().get(0);
		private final RuleCall cDisallowedZonesFTZoneIDTerminalRuleCall_17_2_0_1 = (RuleCall)cDisallowedZonesFTZoneCrossReference_17_2_0.eContents().get(1);
		private final Group cGroup_17_3 = (Group)cGroup_17.eContents().get(3);
		private final Keyword cCommaKeyword_17_3_0 = (Keyword)cGroup_17_3.eContents().get(0);
		private final Assignment cDisallowedZonesAssignment_17_3_1 = (Assignment)cGroup_17_3.eContents().get(1);
		private final CrossReference cDisallowedZonesFTZoneCrossReference_17_3_1_0 = (CrossReference)cDisallowedZonesAssignment_17_3_1.eContents().get(0);
		private final RuleCall cDisallowedZonesFTZoneIDTerminalRuleCall_17_3_1_0_1 = (RuleCall)cDisallowedZonesFTZoneCrossReference_17_3_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_17_4 = (Keyword)cGroup_17.eContents().get(4);
		private final Group cGroup_18 = (Group)cGroup.eContents().get(18);
		private final Keyword cDistanceKeyword_18_0 = (Keyword)cGroup_18.eContents().get(0);
		private final Keyword cColonKeyword_18_1 = (Keyword)cGroup_18.eContents().get(1);
		private final Assignment cDistanceClassAssignment_18_2 = (Assignment)cGroup_18.eContents().get(2);
		private final RuleCall cDistanceClassFTDistanceParserRuleCall_18_2_0 = (RuleCall)cDistanceClassAssignment_18_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_18_3 = (Keyword)cGroup_18.eContents().get(3);
		private final Group cGroup_19 = (Group)cGroup.eContents().get(19);
		private final Keyword cRealKeyword_19_0 = (Keyword)cGroup_19.eContents().get(0);
		private final Keyword cCoordinatesKeyword_19_1 = (Keyword)cGroup_19.eContents().get(1);
		private final Keyword cColonKeyword_19_2 = (Keyword)cGroup_19.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_19_3 = (Keyword)cGroup_19.eContents().get(3);
		private final Assignment cCoordinatesAssignment_19_4 = (Assignment)cGroup_19.eContents().get(4);
		private final RuleCall cCoordinatesFTRealCoordinatesParserRuleCall_19_4_0 = (RuleCall)cCoordinatesAssignment_19_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_19_5 = (Keyword)cGroup_19.eContents().get(5);
		private final Keyword cRightCurlyBracketKeyword_20 = (Keyword)cGroup.eContents().get(20);
		
		//FTObstacle:
		//	"Obstacle" "=" "{"
		//	"name" ":" name=ID ";"
		//	//	"size" ":" "(" lengthX = INT "," lengthY = INT ")" ";"//INT supported
		//	"size" ":" size=FTSize ";" (isMoveable?="isMoveable" ";")?
		//	"color" ":" color=FTPickUpColor ";" ("inside" ":" initiallyInside=[FTZone] ";")? ("disallowedZones" ":"
		//	disallowedZones+=[FTZone] ("," disallowedZones+=[FTZone])* ";")? ("distance" ":" distanceClass+=FTDistance ";")*
		//	("Real" "Coordinates" ":" "[" coordinates=FTRealCoordinates "]")?
		//	"}";
		@Override public ParserRule getRule() { return rule; }
		
		//"Obstacle" "=" "{" "name" ":" name=ID ";" //	"size" ":" "(" lengthX = INT "," lengthY = INT ")" ";"//INT supported
		//"size" ":" size=FTSize ";" (isMoveable?="isMoveable" ";")? "color" ":" color=FTPickUpColor ";" ("inside" ":"
		//initiallyInside=[FTZone] ";")? ("disallowedZones" ":" disallowedZones+=[FTZone] ("," disallowedZones+=[FTZone])* ";")?
		//("distance" ":" distanceClass+=FTDistance ";")* ("Real" "Coordinates" ":" "[" coordinates=FTRealCoordinates "]")? "}"
		public Group getGroup() { return cGroup; }
		
		//"Obstacle"
		public Keyword getObstacleKeyword_0() { return cObstacleKeyword_0; }
		
		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//"name"
		public Keyword getNameKeyword_3() { return cNameKeyword_3; }
		
		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//name=ID
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_5_0() { return cNameIDTerminalRuleCall_5_0; }
		
		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
		
		////	"size" ":" "(" lengthX = INT "," lengthY = INT ")" ";"//INT supported
		//"size"
		public Keyword getSizeKeyword_7() { return cSizeKeyword_7; }
		
		//":"
		public Keyword getColonKeyword_8() { return cColonKeyword_8; }
		
		//size=FTSize
		public Assignment getSizeAssignment_9() { return cSizeAssignment_9; }
		
		//FTSize
		public RuleCall getSizeFTSizeEnumRuleCall_9_0() { return cSizeFTSizeEnumRuleCall_9_0; }
		
		//";"
		public Keyword getSemicolonKeyword_10() { return cSemicolonKeyword_10; }
		
		//(isMoveable?="isMoveable" ";")?
		public Group getGroup_11() { return cGroup_11; }
		
		//isMoveable?="isMoveable"
		public Assignment getIsMoveableAssignment_11_0() { return cIsMoveableAssignment_11_0; }
		
		//"isMoveable"
		public Keyword getIsMoveableIsMoveableKeyword_11_0_0() { return cIsMoveableIsMoveableKeyword_11_0_0; }
		
		//";"
		public Keyword getSemicolonKeyword_11_1() { return cSemicolonKeyword_11_1; }
		
		//"color"
		public Keyword getColorKeyword_12() { return cColorKeyword_12; }
		
		//":"
		public Keyword getColonKeyword_13() { return cColonKeyword_13; }
		
		//color=FTPickUpColor
		public Assignment getColorAssignment_14() { return cColorAssignment_14; }
		
		//FTPickUpColor
		public RuleCall getColorFTPickUpColorEnumRuleCall_14_0() { return cColorFTPickUpColorEnumRuleCall_14_0; }
		
		//";"
		public Keyword getSemicolonKeyword_15() { return cSemicolonKeyword_15; }
		
		//("inside" ":" initiallyInside=[FTZone] ";")?
		public Group getGroup_16() { return cGroup_16; }
		
		//"inside"
		public Keyword getInsideKeyword_16_0() { return cInsideKeyword_16_0; }
		
		//":"
		public Keyword getColonKeyword_16_1() { return cColonKeyword_16_1; }
		
		//initiallyInside=[FTZone]
		public Assignment getInitiallyInsideAssignment_16_2() { return cInitiallyInsideAssignment_16_2; }
		
		//[FTZone]
		public CrossReference getInitiallyInsideFTZoneCrossReference_16_2_0() { return cInitiallyInsideFTZoneCrossReference_16_2_0; }
		
		//ID
		public RuleCall getInitiallyInsideFTZoneIDTerminalRuleCall_16_2_0_1() { return cInitiallyInsideFTZoneIDTerminalRuleCall_16_2_0_1; }
		
		//";"
		public Keyword getSemicolonKeyword_16_3() { return cSemicolonKeyword_16_3; }
		
		//("disallowedZones" ":" disallowedZones+=[FTZone] ("," disallowedZones+=[FTZone])* ";")?
		public Group getGroup_17() { return cGroup_17; }
		
		//"disallowedZones"
		public Keyword getDisallowedZonesKeyword_17_0() { return cDisallowedZonesKeyword_17_0; }
		
		//":"
		public Keyword getColonKeyword_17_1() { return cColonKeyword_17_1; }
		
		//disallowedZones+=[FTZone]
		public Assignment getDisallowedZonesAssignment_17_2() { return cDisallowedZonesAssignment_17_2; }
		
		//[FTZone]
		public CrossReference getDisallowedZonesFTZoneCrossReference_17_2_0() { return cDisallowedZonesFTZoneCrossReference_17_2_0; }
		
		//ID
		public RuleCall getDisallowedZonesFTZoneIDTerminalRuleCall_17_2_0_1() { return cDisallowedZonesFTZoneIDTerminalRuleCall_17_2_0_1; }
		
		//("," disallowedZones+=[FTZone])*
		public Group getGroup_17_3() { return cGroup_17_3; }
		
		//","
		public Keyword getCommaKeyword_17_3_0() { return cCommaKeyword_17_3_0; }
		
		//disallowedZones+=[FTZone]
		public Assignment getDisallowedZonesAssignment_17_3_1() { return cDisallowedZonesAssignment_17_3_1; }
		
		//[FTZone]
		public CrossReference getDisallowedZonesFTZoneCrossReference_17_3_1_0() { return cDisallowedZonesFTZoneCrossReference_17_3_1_0; }
		
		//ID
		public RuleCall getDisallowedZonesFTZoneIDTerminalRuleCall_17_3_1_0_1() { return cDisallowedZonesFTZoneIDTerminalRuleCall_17_3_1_0_1; }
		
		//";"
		public Keyword getSemicolonKeyword_17_4() { return cSemicolonKeyword_17_4; }
		
		//("distance" ":" distanceClass+=FTDistance ";")*
		public Group getGroup_18() { return cGroup_18; }
		
		//"distance"
		public Keyword getDistanceKeyword_18_0() { return cDistanceKeyword_18_0; }
		
		//":"
		public Keyword getColonKeyword_18_1() { return cColonKeyword_18_1; }
		
		//distanceClass+=FTDistance
		public Assignment getDistanceClassAssignment_18_2() { return cDistanceClassAssignment_18_2; }
		
		//FTDistance
		public RuleCall getDistanceClassFTDistanceParserRuleCall_18_2_0() { return cDistanceClassFTDistanceParserRuleCall_18_2_0; }
		
		//";"
		public Keyword getSemicolonKeyword_18_3() { return cSemicolonKeyword_18_3; }
		
		//("Real" "Coordinates" ":" "[" coordinates=FTRealCoordinates "]")?
		public Group getGroup_19() { return cGroup_19; }
		
		//"Real"
		public Keyword getRealKeyword_19_0() { return cRealKeyword_19_0; }
		
		//"Coordinates"
		public Keyword getCoordinatesKeyword_19_1() { return cCoordinatesKeyword_19_1; }
		
		//":"
		public Keyword getColonKeyword_19_2() { return cColonKeyword_19_2; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_19_3() { return cLeftSquareBracketKeyword_19_3; }
		
		//coordinates=FTRealCoordinates
		public Assignment getCoordinatesAssignment_19_4() { return cCoordinatesAssignment_19_4; }
		
		//FTRealCoordinates
		public RuleCall getCoordinatesFTRealCoordinatesParserRuleCall_19_4_0() { return cCoordinatesFTRealCoordinatesParserRuleCall_19_4_0; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_19_5() { return cRightSquareBracketKeyword_19_5; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_20() { return cRightCurlyBracketKeyword_20; }
	}
	public class FTZiplineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ca.mcgill.ecse.fairtracks.FairtracksDsl.FTZipline");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cZiplineKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameIDTerminalRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cLengthKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cColonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cSizeAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cSizeFTSizeEnumRuleCall_9_0 = (RuleCall)cSizeAssignment_9.eContents().get(0);
		private final Keyword cSemicolonKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cExtremitiesKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cColonKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cLeftSquareBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cStartZoneAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final CrossReference cStartZoneFTZoneCrossReference_14_0 = (CrossReference)cStartZoneAssignment_14.eContents().get(0);
		private final RuleCall cStartZoneFTZoneIDTerminalRuleCall_14_0_1 = (RuleCall)cStartZoneFTZoneCrossReference_14_0.eContents().get(1);
		private final Keyword cCommaKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cEndZoneAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final CrossReference cEndZoneFTZoneCrossReference_16_0 = (CrossReference)cEndZoneAssignment_16.eContents().get(0);
		private final RuleCall cEndZoneFTZoneIDTerminalRuleCall_16_0_1 = (RuleCall)cEndZoneFTZoneCrossReference_16_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Keyword cSemicolonKeyword_18 = (Keyword)cGroup.eContents().get(18);
		private final Group cGroup_19 = (Group)cGroup.eContents().get(19);
		private final Keyword cRealKeyword_19_0 = (Keyword)cGroup_19.eContents().get(0);
		private final Keyword cCoordinatesKeyword_19_1 = (Keyword)cGroup_19.eContents().get(1);
		private final Keyword cColonKeyword_19_2 = (Keyword)cGroup_19.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_19_3 = (Keyword)cGroup_19.eContents().get(3);
		private final Assignment cCoordinatesAssignment_19_4 = (Assignment)cGroup_19.eContents().get(4);
		private final RuleCall cCoordinatesFTRealCoordinatesParserRuleCall_19_4_0 = (RuleCall)cCoordinatesAssignment_19_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_19_5 = (Keyword)cGroup_19.eContents().get(5);
		private final Keyword cRightCurlyBracketKeyword_20 = (Keyword)cGroup.eContents().get(20);
		
		//FTZipline:
		//	"Zipline" "=" "{"
		//	"name" ":" name=ID ";"
		//	//	"size" ":" "(" lengthX = INT "," lengthY = INT ")" ";"//INT supported
		//	"length" ":" size=FTSize ";"
		//	//	position = FTPosition//INT supported
		//	"extremities" ":" "[" startZone=[FTZone] "," endZone=[FTZone] "]" ";" ("Real" "Coordinates" ":" "["
		//	coordinates=FTRealCoordinates "]")?
		//	"}";
		@Override public ParserRule getRule() { return rule; }
		
		//"Zipline" "=" "{" "name" ":" name=ID ";" //	"size" ":" "(" lengthX = INT "," lengthY = INT ")" ";"//INT supported
		//"length" ":" size=FTSize ";" //	position = FTPosition//INT supported
		//"extremities" ":" "[" startZone=[FTZone] "," endZone=[FTZone] "]" ";" ("Real" "Coordinates" ":" "["
		//coordinates=FTRealCoordinates "]")? "}"
		public Group getGroup() { return cGroup; }
		
		//"Zipline"
		public Keyword getZiplineKeyword_0() { return cZiplineKeyword_0; }
		
		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//"name"
		public Keyword getNameKeyword_3() { return cNameKeyword_3; }
		
		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//name=ID
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_5_0() { return cNameIDTerminalRuleCall_5_0; }
		
		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
		
		////	"size" ":" "(" lengthX = INT "," lengthY = INT ")" ";"//INT supported
		//"length"
		public Keyword getLengthKeyword_7() { return cLengthKeyword_7; }
		
		//":"
		public Keyword getColonKeyword_8() { return cColonKeyword_8; }
		
		//size=FTSize
		public Assignment getSizeAssignment_9() { return cSizeAssignment_9; }
		
		//FTSize
		public RuleCall getSizeFTSizeEnumRuleCall_9_0() { return cSizeFTSizeEnumRuleCall_9_0; }
		
		//";"
		public Keyword getSemicolonKeyword_10() { return cSemicolonKeyword_10; }
		
		////	position = FTPosition//INT supported
		//"extremities"
		public Keyword getExtremitiesKeyword_11() { return cExtremitiesKeyword_11; }
		
		//":"
		public Keyword getColonKeyword_12() { return cColonKeyword_12; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_13() { return cLeftSquareBracketKeyword_13; }
		
		//startZone=[FTZone]
		public Assignment getStartZoneAssignment_14() { return cStartZoneAssignment_14; }
		
		//[FTZone]
		public CrossReference getStartZoneFTZoneCrossReference_14_0() { return cStartZoneFTZoneCrossReference_14_0; }
		
		//ID
		public RuleCall getStartZoneFTZoneIDTerminalRuleCall_14_0_1() { return cStartZoneFTZoneIDTerminalRuleCall_14_0_1; }
		
		//","
		public Keyword getCommaKeyword_15() { return cCommaKeyword_15; }
		
		//endZone=[FTZone]
		public Assignment getEndZoneAssignment_16() { return cEndZoneAssignment_16; }
		
		//[FTZone]
		public CrossReference getEndZoneFTZoneCrossReference_16_0() { return cEndZoneFTZoneCrossReference_16_0; }
		
		//ID
		public RuleCall getEndZoneFTZoneIDTerminalRuleCall_16_0_1() { return cEndZoneFTZoneIDTerminalRuleCall_16_0_1; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_17() { return cRightSquareBracketKeyword_17; }
		
		//";"
		public Keyword getSemicolonKeyword_18() { return cSemicolonKeyword_18; }
		
		//("Real" "Coordinates" ":" "[" coordinates=FTRealCoordinates "]")?
		public Group getGroup_19() { return cGroup_19; }
		
		//"Real"
		public Keyword getRealKeyword_19_0() { return cRealKeyword_19_0; }
		
		//"Coordinates"
		public Keyword getCoordinatesKeyword_19_1() { return cCoordinatesKeyword_19_1; }
		
		//":"
		public Keyword getColonKeyword_19_2() { return cColonKeyword_19_2; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_19_3() { return cLeftSquareBracketKeyword_19_3; }
		
		//coordinates=FTRealCoordinates
		public Assignment getCoordinatesAssignment_19_4() { return cCoordinatesAssignment_19_4; }
		
		//FTRealCoordinates
		public RuleCall getCoordinatesFTRealCoordinatesParserRuleCall_19_4_0() { return cCoordinatesFTRealCoordinatesParserRuleCall_19_4_0; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_19_5() { return cRightSquareBracketKeyword_19_5; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_20() { return cRightCurlyBracketKeyword_20; }
	}
	public class FTRealCoordinatesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ca.mcgill.ecse.fairtracks.FairtracksDsl.FTRealCoordinates");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPositionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPosXAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPosXINTTerminalRuleCall_3_0 = (RuleCall)cPosXAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cPosYAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cPosYINTTerminalRuleCall_5_0 = (RuleCall)cPosYAssignment_5.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cSizeKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cColonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cLeftParenthesisKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cSizeXAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cSizeXINTTerminalRuleCall_11_0 = (RuleCall)cSizeXAssignment_11.eContents().get(0);
		private final Keyword cCommaKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cSizeYAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cSizeYINTTerminalRuleCall_13_0 = (RuleCall)cSizeYAssignment_13.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cSemicolonKeyword_15 = (Keyword)cGroup.eContents().get(15);
		
		////FTPosition:
		////	"LL" ":" "(" LLx = INT "," LLy = INT ")" ";"
		////;//INT supported
		//FTRealCoordinates:
		//	"Position" ":" "(" posX=INT "," posY=INT ")" ";"
		//	"Size" ":" "(" sizeX=INT "," sizeY=INT ")" ";";
		@Override public ParserRule getRule() { return rule; }
		
		//"Position" ":" "(" posX=INT "," posY=INT ")" ";" "Size" ":" "(" sizeX=INT "," sizeY=INT ")" ";"
		public Group getGroup() { return cGroup; }
		
		//"Position"
		public Keyword getPositionKeyword_0() { return cPositionKeyword_0; }
		
		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//posX=INT
		public Assignment getPosXAssignment_3() { return cPosXAssignment_3; }
		
		//INT
		public RuleCall getPosXINTTerminalRuleCall_3_0() { return cPosXINTTerminalRuleCall_3_0; }
		
		//","
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//posY=INT
		public Assignment getPosYAssignment_5() { return cPosYAssignment_5; }
		
		//INT
		public RuleCall getPosYINTTerminalRuleCall_5_0() { return cPosYINTTerminalRuleCall_5_0; }
		
		//")"
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
		
		//";"
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
		
		//"Size"
		public Keyword getSizeKeyword_8() { return cSizeKeyword_8; }
		
		//":"
		public Keyword getColonKeyword_9() { return cColonKeyword_9; }
		
		//"("
		public Keyword getLeftParenthesisKeyword_10() { return cLeftParenthesisKeyword_10; }
		
		//sizeX=INT
		public Assignment getSizeXAssignment_11() { return cSizeXAssignment_11; }
		
		//INT
		public RuleCall getSizeXINTTerminalRuleCall_11_0() { return cSizeXINTTerminalRuleCall_11_0; }
		
		//","
		public Keyword getCommaKeyword_12() { return cCommaKeyword_12; }
		
		//sizeY=INT
		public Assignment getSizeYAssignment_13() { return cSizeYAssignment_13; }
		
		//INT
		public RuleCall getSizeYINTTerminalRuleCall_13_0() { return cSizeYINTTerminalRuleCall_13_0; }
		
		//")"
		public Keyword getRightParenthesisKeyword_14() { return cRightParenthesisKeyword_14; }
		
		//";"
		public Keyword getSemicolonKeyword_15() { return cSemicolonKeyword_15; }
	}
	public class FTDistanceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ca.mcgill.ecse.fairtracks.FairtracksDsl.FTDistance");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cDistanceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDistanceFTDistanceValueEnumRuleCall_1_0 = (RuleCall)cDistanceAssignment_1.eContents().get(0);
		private final Keyword cObjectKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cToObjectAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cToObjectFTObjectWithDistanceCrossReference_3_0 = (CrossReference)cToObjectAssignment_3.eContents().get(0);
		private final RuleCall cToObjectFTObjectWithDistanceIDTerminalRuleCall_3_0_1 = (RuleCall)cToObjectFTObjectWithDistanceCrossReference_3_0.eContents().get(1);
		
		//FTDistance:
		//	"is" distance=FTDistanceValue "object" toObject=[FTObjectWithDistance];
		@Override public ParserRule getRule() { return rule; }
		
		//"is" distance=FTDistanceValue "object" toObject=[FTObjectWithDistance]
		public Group getGroup() { return cGroup; }
		
		//"is"
		public Keyword getIsKeyword_0() { return cIsKeyword_0; }
		
		//distance=FTDistanceValue
		public Assignment getDistanceAssignment_1() { return cDistanceAssignment_1; }
		
		//FTDistanceValue
		public RuleCall getDistanceFTDistanceValueEnumRuleCall_1_0() { return cDistanceFTDistanceValueEnumRuleCall_1_0; }
		
		//"object"
		public Keyword getObjectKeyword_2() { return cObjectKeyword_2; }
		
		//toObject=[FTObjectWithDistance]
		public Assignment getToObjectAssignment_3() { return cToObjectAssignment_3; }
		
		//[FTObjectWithDistance]
		public CrossReference getToObjectFTObjectWithDistanceCrossReference_3_0() { return cToObjectFTObjectWithDistanceCrossReference_3_0; }
		
		//ID
		public RuleCall getToObjectFTObjectWithDistanceIDTerminalRuleCall_3_0_1() { return cToObjectFTObjectWithDistanceIDTerminalRuleCall_3_0_1; }
	}
	public class FTTrajectoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ca.mcgill.ecse.fairtracks.FairtracksDsl.FTTrajectory");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTrajectoryKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cPlayerKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cPlayerAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cPlayerFTPlayerCrossReference_5_0 = (CrossReference)cPlayerAssignment_5.eContents().get(0);
		private final RuleCall cPlayerFTPlayerIDTerminalRuleCall_5_0_1 = (RuleCall)cPlayerFTPlayerCrossReference_5_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cStatesKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cColonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cLeftCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cStatesAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cStatesFTStateParserRuleCall_10_0 = (RuleCall)cStatesAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		////////////
		////Dynamic Portion
		////////////
		//FTTrajectory:
		//	"Trajectory" "=" "{"
		//	"player" ":" player=[FTPlayer] ";"
		//	"states" ":" "{" states+=FTState* "}"
		//	"}";
		@Override public ParserRule getRule() { return rule; }
		
		//"Trajectory" "=" "{" "player" ":" player=[FTPlayer] ";" "states" ":" "{" states+=FTState* "}" "}"
		public Group getGroup() { return cGroup; }
		
		//"Trajectory"
		public Keyword getTrajectoryKeyword_0() { return cTrajectoryKeyword_0; }
		
		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//"player"
		public Keyword getPlayerKeyword_3() { return cPlayerKeyword_3; }
		
		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//player=[FTPlayer]
		public Assignment getPlayerAssignment_5() { return cPlayerAssignment_5; }
		
		//[FTPlayer]
		public CrossReference getPlayerFTPlayerCrossReference_5_0() { return cPlayerFTPlayerCrossReference_5_0; }
		
		//ID
		public RuleCall getPlayerFTPlayerIDTerminalRuleCall_5_0_1() { return cPlayerFTPlayerIDTerminalRuleCall_5_0_1; }
		
		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
		
		//"states"
		public Keyword getStatesKeyword_7() { return cStatesKeyword_7; }
		
		//":"
		public Keyword getColonKeyword_8() { return cColonKeyword_8; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_9() { return cLeftCurlyBracketKeyword_9; }
		
		//states+=FTState*
		public Assignment getStatesAssignment_10() { return cStatesAssignment_10; }
		
		//FTState
		public RuleCall getStatesFTStateParserRuleCall_10_0() { return cStatesFTStateParserRuleCall_10_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class FTStateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ca.mcgill.ecse.fairtracks.FairtracksDsl.FTState");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameIDTerminalRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cPositionKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cColonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cLeftParenthesisKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cPosXAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cPosXINTTerminalRuleCall_10_0 = (RuleCall)cPosXAssignment_10.eContents().get(0);
		private final Keyword cCommaKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cPosYAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cPosYINTTerminalRuleCall_12_0 = (RuleCall)cPosYAssignment_12.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cSemicolonKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Assignment cObservationsAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cObservationsFTObservationParserRuleCall_15_0 = (RuleCall)cObservationsAssignment_15.eContents().get(0);
		private final Group cGroup_16 = (Group)cGroup.eContents().get(16);
		private final Keyword cNextStateKeyword_16_0 = (Keyword)cGroup_16.eContents().get(0);
		private final Keyword cColonKeyword_16_1 = (Keyword)cGroup_16.eContents().get(1);
		private final Assignment cNextStateAssignment_16_2 = (Assignment)cGroup_16.eContents().get(2);
		private final CrossReference cNextStateFTStateCrossReference_16_2_0 = (CrossReference)cNextStateAssignment_16_2.eContents().get(0);
		private final RuleCall cNextStateFTStateIDTerminalRuleCall_16_2_0_1 = (RuleCall)cNextStateFTStateCrossReference_16_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_16_3 = (Keyword)cGroup_16.eContents().get(3);
		private final Keyword cRightSquareBracketKeyword_17 = (Keyword)cGroup.eContents().get(17);
		
		//FTState:
		//	"State" "=" "["
		//	"name" ":" name=ID ";"
		//	"position" ":" "(" posX=INT "," posY=INT ")" ";"
		//	observations+=FTObservation* ("nextState" ":" nextState=[FTState] ";")?
		//	"]";
		@Override public ParserRule getRule() { return rule; }
		
		//"State" "=" "[" "name" ":" name=ID ";" "position" ":" "(" posX=INT "," posY=INT ")" ";" observations+=FTObservation*
		//("nextState" ":" nextState=[FTState] ";")? "]"
		public Group getGroup() { return cGroup; }
		
		//"State"
		public Keyword getStateKeyword_0() { return cStateKeyword_0; }
		
		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }
		
		//"name"
		public Keyword getNameKeyword_3() { return cNameKeyword_3; }
		
		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//name=ID
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_5_0() { return cNameIDTerminalRuleCall_5_0; }
		
		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
		
		//"position"
		public Keyword getPositionKeyword_7() { return cPositionKeyword_7; }
		
		//":"
		public Keyword getColonKeyword_8() { return cColonKeyword_8; }
		
		//"("
		public Keyword getLeftParenthesisKeyword_9() { return cLeftParenthesisKeyword_9; }
		
		//posX=INT
		public Assignment getPosXAssignment_10() { return cPosXAssignment_10; }
		
		//INT
		public RuleCall getPosXINTTerminalRuleCall_10_0() { return cPosXINTTerminalRuleCall_10_0; }
		
		//","
		public Keyword getCommaKeyword_11() { return cCommaKeyword_11; }
		
		//posY=INT
		public Assignment getPosYAssignment_12() { return cPosYAssignment_12; }
		
		//INT
		public RuleCall getPosYINTTerminalRuleCall_12_0() { return cPosYINTTerminalRuleCall_12_0; }
		
		//")"
		public Keyword getRightParenthesisKeyword_13() { return cRightParenthesisKeyword_13; }
		
		//";"
		public Keyword getSemicolonKeyword_14() { return cSemicolonKeyword_14; }
		
		//observations+=FTObservation*
		public Assignment getObservationsAssignment_15() { return cObservationsAssignment_15; }
		
		//FTObservation
		public RuleCall getObservationsFTObservationParserRuleCall_15_0() { return cObservationsFTObservationParserRuleCall_15_0; }
		
		//("nextState" ":" nextState=[FTState] ";")?
		public Group getGroup_16() { return cGroup_16; }
		
		//"nextState"
		public Keyword getNextStateKeyword_16_0() { return cNextStateKeyword_16_0; }
		
		//":"
		public Keyword getColonKeyword_16_1() { return cColonKeyword_16_1; }
		
		//nextState=[FTState]
		public Assignment getNextStateAssignment_16_2() { return cNextStateAssignment_16_2; }
		
		//[FTState]
		public CrossReference getNextStateFTStateCrossReference_16_2_0() { return cNextStateFTStateCrossReference_16_2_0; }
		
		//ID
		public RuleCall getNextStateFTStateIDTerminalRuleCall_16_2_0_1() { return cNextStateFTStateIDTerminalRuleCall_16_2_0_1; }
		
		//";"
		public Keyword getSemicolonKeyword_16_3() { return cSemicolonKeyword_16_3; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_17() { return cRightSquareBracketKeyword_17; }
	}
	public class FTObservationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ca.mcgill.ecse.fairtracks.FairtracksDsl.FTObservation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cFTDistanceObsParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFTHangingObsParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFTPickUpObsParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cFTZoneObsParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//////OPTION 1;
		////FTObservation:
		////	({FTDistanceObs} "distanceIs" ":" | 
		////	{FTHangingObs} "hangingFrom" ":" |
		////	{FTPickUpObs} "pickedUp" ":" | 
		////	{FTZoneObs} "inZone" ":" distance = FTDistanceValue ) object = [FTStaticObject] ";"
		////;
		////OPTION 2
		//FTObservation:
		//	FTDistanceObs | FTHangingObs | FTPickUpObs | FTZoneObs;
		@Override public ParserRule getRule() { return rule; }
		
		//FTDistanceObs | FTHangingObs | FTPickUpObs | FTZoneObs
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//FTDistanceObs
		public RuleCall getFTDistanceObsParserRuleCall_0() { return cFTDistanceObsParserRuleCall_0; }
		
		//FTHangingObs
		public RuleCall getFTHangingObsParserRuleCall_1() { return cFTHangingObsParserRuleCall_1; }
		
		//FTPickUpObs
		public RuleCall getFTPickUpObsParserRuleCall_2() { return cFTPickUpObsParserRuleCall_2; }
		
		//FTZoneObs
		public RuleCall getFTZoneObsParserRuleCall_3() { return cFTZoneObsParserRuleCall_3; }
	}
	public class FTDistanceObsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ca.mcgill.ecse.fairtracks.FairtracksDsl.FTDistanceObs");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDistanceIsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDistanceAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDistanceFTDistanceValueEnumRuleCall_2_0 = (RuleCall)cDistanceAssignment_2.eContents().get(0);
		private final Assignment cObjectAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cObjectFTObjectWithDistanceCrossReference_3_0 = (CrossReference)cObjectAssignment_3.eContents().get(0);
		private final RuleCall cObjectFTObjectWithDistanceIDTerminalRuleCall_3_0_1 = (RuleCall)cObjectFTObjectWithDistanceCrossReference_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//FTDistanceObs:
		//	"distanceIs" ":" distance=FTDistanceValue object=[FTObjectWithDistance] ";";
		@Override public ParserRule getRule() { return rule; }
		
		//"distanceIs" ":" distance=FTDistanceValue object=[FTObjectWithDistance] ";"
		public Group getGroup() { return cGroup; }
		
		//"distanceIs"
		public Keyword getDistanceIsKeyword_0() { return cDistanceIsKeyword_0; }
		
		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//distance=FTDistanceValue
		public Assignment getDistanceAssignment_2() { return cDistanceAssignment_2; }
		
		//FTDistanceValue
		public RuleCall getDistanceFTDistanceValueEnumRuleCall_2_0() { return cDistanceFTDistanceValueEnumRuleCall_2_0; }
		
		//object=[FTObjectWithDistance]
		public Assignment getObjectAssignment_3() { return cObjectAssignment_3; }
		
		//[FTObjectWithDistance]
		public CrossReference getObjectFTObjectWithDistanceCrossReference_3_0() { return cObjectFTObjectWithDistanceCrossReference_3_0; }
		
		//ID
		public RuleCall getObjectFTObjectWithDistanceIDTerminalRuleCall_3_0_1() { return cObjectFTObjectWithDistanceIDTerminalRuleCall_3_0_1; }
		
		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class FTHangingObsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ca.mcgill.ecse.fairtracks.FairtracksDsl.FTHangingObs");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHangingFromKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cObjectAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cObjectFTZiplineCrossReference_2_0 = (CrossReference)cObjectAssignment_2.eContents().get(0);
		private final RuleCall cObjectFTZiplineIDTerminalRuleCall_2_0_1 = (RuleCall)cObjectFTZiplineCrossReference_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//FTHangingObs:
		//	"hangingFrom" ":" object=[FTZipline] ";";
		@Override public ParserRule getRule() { return rule; }
		
		//"hangingFrom" ":" object=[FTZipline] ";"
		public Group getGroup() { return cGroup; }
		
		//"hangingFrom"
		public Keyword getHangingFromKeyword_0() { return cHangingFromKeyword_0; }
		
		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//object=[FTZipline]
		public Assignment getObjectAssignment_2() { return cObjectAssignment_2; }
		
		//[FTZipline]
		public CrossReference getObjectFTZiplineCrossReference_2_0() { return cObjectFTZiplineCrossReference_2_0; }
		
		//ID
		public RuleCall getObjectFTZiplineIDTerminalRuleCall_2_0_1() { return cObjectFTZiplineIDTerminalRuleCall_2_0_1; }
		
		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class FTPickUpObsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ca.mcgill.ecse.fairtracks.FairtracksDsl.FTPickUpObs");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPickedUpKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cObjectAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cObjectFTObstacleCrossReference_2_0 = (CrossReference)cObjectAssignment_2.eContents().get(0);
		private final RuleCall cObjectFTObstacleIDTerminalRuleCall_2_0_1 = (RuleCall)cObjectFTObstacleCrossReference_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//FTPickUpObs:
		//	"pickedUp" ":" object=[FTObstacle] ";";
		@Override public ParserRule getRule() { return rule; }
		
		//"pickedUp" ":" object=[FTObstacle] ";"
		public Group getGroup() { return cGroup; }
		
		//"pickedUp"
		public Keyword getPickedUpKeyword_0() { return cPickedUpKeyword_0; }
		
		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//object=[FTObstacle]
		public Assignment getObjectAssignment_2() { return cObjectAssignment_2; }
		
		//[FTObstacle]
		public CrossReference getObjectFTObstacleCrossReference_2_0() { return cObjectFTObstacleCrossReference_2_0; }
		
		//ID
		public RuleCall getObjectFTObstacleIDTerminalRuleCall_2_0_1() { return cObjectFTObstacleIDTerminalRuleCall_2_0_1; }
		
		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class FTZoneObsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ca.mcgill.ecse.fairtracks.FairtracksDsl.FTZoneObs");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInZoneKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cObjectAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cObjectFTZoneCrossReference_2_0 = (CrossReference)cObjectAssignment_2.eContents().get(0);
		private final RuleCall cObjectFTZoneIDTerminalRuleCall_2_0_1 = (RuleCall)cObjectFTZoneCrossReference_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//FTZoneObs:
		//	"inZone" ":" object=[FTZone] ";";
		@Override public ParserRule getRule() { return rule; }
		
		//"inZone" ":" object=[FTZone] ";"
		public Group getGroup() { return cGroup; }
		
		//"inZone"
		public Keyword getInZoneKeyword_0() { return cInZoneKeyword_0; }
		
		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//object=[FTZone]
		public Assignment getObjectAssignment_2() { return cObjectAssignment_2; }
		
		//[FTZone]
		public CrossReference getObjectFTZoneCrossReference_2_0() { return cObjectFTZoneCrossReference_2_0; }
		
		//ID
		public RuleCall getObjectFTZoneIDTerminalRuleCall_2_0_1() { return cObjectFTZoneIDTerminalRuleCall_2_0_1; }
		
		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	
	public class FTPickUpColorElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ca.mcgill.ecse.fairtracks.FairtracksDsl.FTPickUpColor");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cRedEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cRedRedKeyword_0_0 = (Keyword)cRedEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cBlueEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cBlueBlueKeyword_1_0 = (Keyword)cBlueEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cYellowEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cYellowYellowKeyword_2_0 = (Keyword)cYellowEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cWhiteEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cWhiteWhiteKeyword_3_0 = (Keyword)cWhiteEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cOtherEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cOtherOtherKeyword_4_0 = (Keyword)cOtherEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum FTPickUpColor:
		//	Red | Blue | Yellow | White | Other;
		public EnumRule getRule() { return rule; }
		
		//Red | Blue | Yellow | White | Other
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Red
		public EnumLiteralDeclaration getRedEnumLiteralDeclaration_0() { return cRedEnumLiteralDeclaration_0; }
		
		//"Red"
		public Keyword getRedRedKeyword_0_0() { return cRedRedKeyword_0_0; }
		
		//Blue
		public EnumLiteralDeclaration getBlueEnumLiteralDeclaration_1() { return cBlueEnumLiteralDeclaration_1; }
		
		//"Blue"
		public Keyword getBlueBlueKeyword_1_0() { return cBlueBlueKeyword_1_0; }
		
		//Yellow
		public EnumLiteralDeclaration getYellowEnumLiteralDeclaration_2() { return cYellowEnumLiteralDeclaration_2; }
		
		//"Yellow"
		public Keyword getYellowYellowKeyword_2_0() { return cYellowYellowKeyword_2_0; }
		
		//White
		public EnumLiteralDeclaration getWhiteEnumLiteralDeclaration_3() { return cWhiteEnumLiteralDeclaration_3; }
		
		//"White"
		public Keyword getWhiteWhiteKeyword_3_0() { return cWhiteWhiteKeyword_3_0; }
		
		//Other
		public EnumLiteralDeclaration getOtherEnumLiteralDeclaration_4() { return cOtherEnumLiteralDeclaration_4; }
		
		//"Other"
		public Keyword getOtherOtherKeyword_4_0() { return cOtherOtherKeyword_4_0; }
	}
	public class FTRoleElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ca.mcgill.ecse.fairtracks.FairtracksDsl.FTRole");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAttackEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAttackAttackKeyword_0_0 = (Keyword)cAttackEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDefenseEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDefenseDefenseKeyword_1_0 = (Keyword)cDefenseEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum FTRole:
		//	Attack | Defense;
		public EnumRule getRule() { return rule; }
		
		//Attack | Defense
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Attack
		public EnumLiteralDeclaration getAttackEnumLiteralDeclaration_0() { return cAttackEnumLiteralDeclaration_0; }
		
		//"Attack"
		public Keyword getAttackAttackKeyword_0_0() { return cAttackAttackKeyword_0_0; }
		
		//Defense
		public EnumLiteralDeclaration getDefenseEnumLiteralDeclaration_1() { return cDefenseEnumLiteralDeclaration_1; }
		
		//"Defense"
		public Keyword getDefenseDefenseKeyword_1_0() { return cDefenseDefenseKeyword_1_0; }
	}
	public class FTZoneTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ca.mcgill.ecse.fairtracks.FairtracksDsl.FTZoneType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cBackgroundEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cBackgroundBackgroundKeyword_0_0 = (Keyword)cBackgroundEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cGreenEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cGreenGreenKeyword_1_0 = (Keyword)cGreenEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cRedEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cRedRedKeyword_2_0 = (Keyword)cRedEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cPassageEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cPassagePassageKeyword_3_0 = (Keyword)cPassageEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cBallEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cBallBallKeyword_4_0 = (Keyword)cBallEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cSearchEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cSearchSearchKeyword_5_0 = (Keyword)cSearchEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cStartEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cStartStartKeyword_6_0 = (Keyword)cStartEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cZiplineEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cZiplineZiplineKeyword_7_0 = (Keyword)cZiplineEnumLiteralDeclaration_7.eContents().get(0);
		
		//enum FTZoneType:
		//	Background | Green | Red | Passage | Ball | Search | Start | Zipline;
		public EnumRule getRule() { return rule; }
		
		//Background | Green | Red | Passage | Ball | Search | Start | Zipline
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Background
		public EnumLiteralDeclaration getBackgroundEnumLiteralDeclaration_0() { return cBackgroundEnumLiteralDeclaration_0; }
		
		//"Background"
		public Keyword getBackgroundBackgroundKeyword_0_0() { return cBackgroundBackgroundKeyword_0_0; }
		
		//Green
		public EnumLiteralDeclaration getGreenEnumLiteralDeclaration_1() { return cGreenEnumLiteralDeclaration_1; }
		
		//"Green"
		public Keyword getGreenGreenKeyword_1_0() { return cGreenGreenKeyword_1_0; }
		
		//Red
		public EnumLiteralDeclaration getRedEnumLiteralDeclaration_2() { return cRedEnumLiteralDeclaration_2; }
		
		//"Red"
		public Keyword getRedRedKeyword_2_0() { return cRedRedKeyword_2_0; }
		
		//Passage
		public EnumLiteralDeclaration getPassageEnumLiteralDeclaration_3() { return cPassageEnumLiteralDeclaration_3; }
		
		//"Passage"
		public Keyword getPassagePassageKeyword_3_0() { return cPassagePassageKeyword_3_0; }
		
		//Ball
		public EnumLiteralDeclaration getBallEnumLiteralDeclaration_4() { return cBallEnumLiteralDeclaration_4; }
		
		//"Ball"
		public Keyword getBallBallKeyword_4_0() { return cBallBallKeyword_4_0; }
		
		//Search
		public EnumLiteralDeclaration getSearchEnumLiteralDeclaration_5() { return cSearchEnumLiteralDeclaration_5; }
		
		//"Search"
		public Keyword getSearchSearchKeyword_5_0() { return cSearchSearchKeyword_5_0; }
		
		//Start
		public EnumLiteralDeclaration getStartEnumLiteralDeclaration_6() { return cStartEnumLiteralDeclaration_6; }
		
		//"Start"
		public Keyword getStartStartKeyword_6_0() { return cStartStartKeyword_6_0; }
		
		//Zipline
		public EnumLiteralDeclaration getZiplineEnumLiteralDeclaration_7() { return cZiplineEnumLiteralDeclaration_7; }
		
		//"Zipline"
		public Keyword getZiplineZiplineKeyword_7_0() { return cZiplineZiplineKeyword_7_0; }
	}
	public class FTDistanceValueElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ca.mcgill.ecse.fairtracks.FairtracksDsl.FTDistanceValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cVeryFarFromEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cVeryFarFromVeryFarFromKeyword_0_0 = (Keyword)cVeryFarFromEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cFarFromEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cFarFromFarFromKeyword_1_0 = (Keyword)cFarFromEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCloseToEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCloseToCloseToKeyword_2_0 = (Keyword)cCloseToEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cDangerouslyCloseToEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cDangerouslyCloseToDangerouslyCloseToKeyword_3_0 = (Keyword)cDangerouslyCloseToEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum FTDistanceValue:
		//	VeryFarFrom | FarFrom | CloseTo | DangerouslyCloseTo;
		public EnumRule getRule() { return rule; }
		
		//VeryFarFrom | FarFrom | CloseTo | DangerouslyCloseTo
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//VeryFarFrom
		public EnumLiteralDeclaration getVeryFarFromEnumLiteralDeclaration_0() { return cVeryFarFromEnumLiteralDeclaration_0; }
		
		//"VeryFarFrom"
		public Keyword getVeryFarFromVeryFarFromKeyword_0_0() { return cVeryFarFromVeryFarFromKeyword_0_0; }
		
		//FarFrom
		public EnumLiteralDeclaration getFarFromEnumLiteralDeclaration_1() { return cFarFromEnumLiteralDeclaration_1; }
		
		//"FarFrom"
		public Keyword getFarFromFarFromKeyword_1_0() { return cFarFromFarFromKeyword_1_0; }
		
		//CloseTo
		public EnumLiteralDeclaration getCloseToEnumLiteralDeclaration_2() { return cCloseToEnumLiteralDeclaration_2; }
		
		//"CloseTo"
		public Keyword getCloseToCloseToKeyword_2_0() { return cCloseToCloseToKeyword_2_0; }
		
		//DangerouslyCloseTo
		public EnumLiteralDeclaration getDangerouslyCloseToEnumLiteralDeclaration_3() { return cDangerouslyCloseToEnumLiteralDeclaration_3; }
		
		//"DangerouslyCloseTo"
		public Keyword getDangerouslyCloseToDangerouslyCloseToKeyword_3_0() { return cDangerouslyCloseToDangerouslyCloseToKeyword_3_0; }
	}
	public class FTSizeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ca.mcgill.ecse.fairtracks.FairtracksDsl.FTSize");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPointEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPointPointKeyword_0_0 = (Keyword)cPointEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSmallEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSmallSmallKeyword_1_0 = (Keyword)cSmallEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMediumEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMediumMediumKeyword_2_0 = (Keyword)cMediumEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cBigEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cBigBigKeyword_3_0 = (Keyword)cBigEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum FTSize:
		//	Point | Small | Medium | Big;
		public EnumRule getRule() { return rule; }
		
		//Point | Small | Medium | Big
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Point
		public EnumLiteralDeclaration getPointEnumLiteralDeclaration_0() { return cPointEnumLiteralDeclaration_0; }
		
		//"Point"
		public Keyword getPointPointKeyword_0_0() { return cPointPointKeyword_0_0; }
		
		//Small
		public EnumLiteralDeclaration getSmallEnumLiteralDeclaration_1() { return cSmallEnumLiteralDeclaration_1; }
		
		//"Small"
		public Keyword getSmallSmallKeyword_1_0() { return cSmallSmallKeyword_1_0; }
		
		//Medium
		public EnumLiteralDeclaration getMediumEnumLiteralDeclaration_2() { return cMediumEnumLiteralDeclaration_2; }
		
		//"Medium"
		public Keyword getMediumMediumKeyword_2_0() { return cMediumMediumKeyword_2_0; }
		
		//Big
		public EnumLiteralDeclaration getBigEnumLiteralDeclaration_3() { return cBigEnumLiteralDeclaration_3; }
		
		//"Big"
		public Keyword getBigBigKeyword_3_0() { return cBigBigKeyword_3_0; }
	}
	
	private final FairtracksmodelElements pFairtracksmodel;
	private final FTPickUpColorElements eFTPickUpColor;
	private final FTRoleElements eFTRole;
	private final FTZoneTypeElements eFTZoneType;
	private final FTDistanceValueElements eFTDistanceValue;
	private final FTSizeElements eFTSize;
	private final FTStaticObjectElements pFTStaticObject;
	private final FTObjectWithDistanceElements pFTObjectWithDistance;
	private final FTPlayerElements pFTPlayer;
	private final FTPickUpColorClassElements pFTPickUpColorClass;
	private final FTZoneElements pFTZone;
	private final FTObstacleElements pFTObstacle;
	private final FTZiplineElements pFTZipline;
	private final FTRealCoordinatesElements pFTRealCoordinates;
	private final FTDistanceElements pFTDistance;
	private final FTTrajectoryElements pFTTrajectory;
	private final FTStateElements pFTState;
	private final FTObservationElements pFTObservation;
	private final FTDistanceObsElements pFTDistanceObs;
	private final FTHangingObsElements pFTHangingObs;
	private final FTPickUpObsElements pFTPickUpObs;
	private final FTZoneObsElements pFTZoneObs;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public FairtracksDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pFairtracksmodel = new FairtracksmodelElements();
		this.eFTPickUpColor = new FTPickUpColorElements();
		this.eFTRole = new FTRoleElements();
		this.eFTZoneType = new FTZoneTypeElements();
		this.eFTDistanceValue = new FTDistanceValueElements();
		this.eFTSize = new FTSizeElements();
		this.pFTStaticObject = new FTStaticObjectElements();
		this.pFTObjectWithDistance = new FTObjectWithDistanceElements();
		this.pFTPlayer = new FTPlayerElements();
		this.pFTPickUpColorClass = new FTPickUpColorClassElements();
		this.pFTZone = new FTZoneElements();
		this.pFTObstacle = new FTObstacleElements();
		this.pFTZipline = new FTZiplineElements();
		this.pFTRealCoordinates = new FTRealCoordinatesElements();
		this.pFTDistance = new FTDistanceElements();
		this.pFTTrajectory = new FTTrajectoryElements();
		this.pFTState = new FTStateElements();
		this.pFTObservation = new FTObservationElements();
		this.pFTDistanceObs = new FTDistanceObsElements();
		this.pFTHangingObs = new FTHangingObsElements();
		this.pFTPickUpObs = new FTPickUpObsElements();
		this.pFTZoneObs = new FTZoneObsElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("ca.mcgill.ecse.fairtracks.FairtracksDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Fairtracksmodel:
	//	staticObjects+=FTStaticObject*
	//	initialDistances+=FTDistance*
	//	//Dynamic
	//	//trajectories += FTTrajectory*
	//;
	public FairtracksmodelElements getFairtracksmodelAccess() {
		return pFairtracksmodel;
	}
	
	public ParserRule getFairtracksmodelRule() {
		return getFairtracksmodelAccess().getRule();
	}
	
	//enum FTPickUpColor:
	//	Red | Blue | Yellow | White | Other;
	public FTPickUpColorElements getFTPickUpColorAccess() {
		return eFTPickUpColor;
	}
	
	public EnumRule getFTPickUpColorRule() {
		return getFTPickUpColorAccess().getRule();
	}
	
	//enum FTRole:
	//	Attack | Defense;
	public FTRoleElements getFTRoleAccess() {
		return eFTRole;
	}
	
	public EnumRule getFTRoleRule() {
		return getFTRoleAccess().getRule();
	}
	
	//enum FTZoneType:
	//	Background | Green | Red | Passage | Ball | Search | Start | Zipline;
	public FTZoneTypeElements getFTZoneTypeAccess() {
		return eFTZoneType;
	}
	
	public EnumRule getFTZoneTypeRule() {
		return getFTZoneTypeAccess().getRule();
	}
	
	//enum FTDistanceValue:
	//	VeryFarFrom | FarFrom | CloseTo | DangerouslyCloseTo;
	public FTDistanceValueElements getFTDistanceValueAccess() {
		return eFTDistanceValue;
	}
	
	public EnumRule getFTDistanceValueRule() {
		return getFTDistanceValueAccess().getRule();
	}
	
	//enum FTSize:
	//	Point | Small | Medium | Big;
	public FTSizeElements getFTSizeAccess() {
		return eFTSize;
	}
	
	public EnumRule getFTSizeRule() {
		return getFTSizeAccess().getRule();
	}
	
	////////////
	////Static Portion
	////////////
	//FTStaticObject:
	//	FTObjectWithDistance | FTZipline;
	public FTStaticObjectElements getFTStaticObjectAccess() {
		return pFTStaticObject;
	}
	
	public ParserRule getFTStaticObjectRule() {
		return getFTStaticObjectAccess().getRule();
	}
	
	//FTObjectWithDistance:
	//	FTPlayer | FTZone | FTObstacle;
	public FTObjectWithDistanceElements getFTObjectWithDistanceAccess() {
		return pFTObjectWithDistance;
	}
	
	public ParserRule getFTObjectWithDistanceRule() {
		return getFTObjectWithDistanceAccess().getRule();
	}
	
	//FTPlayer:
	//	"Player" "=" "{"
	//	"name" ":" name=ID ";"
	//	//	"size" ":" "(" lengthX = INT "," lengthY = INT ")" ";"//INT supported
	//	"size" ":" size=FTSize ";"
	//	//	position = FTPosition//INT supported
	//	"role" ":" role=FTRole ";" ("inside" ":" initiallyInside=[FTZone] ";")? (canPickUpObject?="canPickUp" ";")?
	//	("pickUpColor" ":" pickUpColor+=FTPickUpColorClass ("," pickUpColor+=FTPickUpColorClass)* ";")? ("distance" ":"
	//	distanceClass+=FTDistance ";")* ("Real" "Coordinates" ":" "[" coordinates=FTRealCoordinates "]")?
	//	"}";
	public FTPlayerElements getFTPlayerAccess() {
		return pFTPlayer;
	}
	
	public ParserRule getFTPlayerRule() {
		return getFTPlayerAccess().getRule();
	}
	
	//FTPickUpColorClass:
	//	color=FTPickUpColor;
	public FTPickUpColorClassElements getFTPickUpColorClassAccess() {
		return pFTPickUpColorClass;
	}
	
	public ParserRule getFTPickUpColorClassRule() {
		return getFTPickUpColorClassAccess().getRule();
	}
	
	//FTZone:
	//	"Zone" "=" "{"
	//	"name" ":" name=ID ";"
	//	//	"size" ":" "(" lengthX = INT "," lengthY = INT ")" ";"//INT supported
	//	"size" ":" size=FTSize ";"
	//	//	position = FTPosition//INT supported
	//	"zoneType" ":" type=FTZoneType ";" ("contains" ":" contains+=[FTZone] ("," contains+=[FTZone])* ";")?
	//	("partiallyOverlaps" ":" partiallyOverlaps+=[FTZone] ("," partiallyOverlaps+=[FTZone])* ";")? ("isAdjacentTo" ":"
	//	isAdjacentTo+=[FTZone] ("," isAdjacentTo+=[FTZone])* ";")? ("disallowedPlayers" ":" disallowedPlayers+=[FTPlayer]
	//	("," disallowedPlayers+=[FTPlayer])* ";")? ("distance" ":" distanceClass+=FTDistance ";")* ("Real" "Coordinates" ":"
	//	"[" coordinates=FTRealCoordinates "]")?
	//	"}";
	public FTZoneElements getFTZoneAccess() {
		return pFTZone;
	}
	
	public ParserRule getFTZoneRule() {
		return getFTZoneAccess().getRule();
	}
	
	//FTObstacle:
	//	"Obstacle" "=" "{"
	//	"name" ":" name=ID ";"
	//	//	"size" ":" "(" lengthX = INT "," lengthY = INT ")" ";"//INT supported
	//	"size" ":" size=FTSize ";" (isMoveable?="isMoveable" ";")?
	//	"color" ":" color=FTPickUpColor ";" ("inside" ":" initiallyInside=[FTZone] ";")? ("disallowedZones" ":"
	//	disallowedZones+=[FTZone] ("," disallowedZones+=[FTZone])* ";")? ("distance" ":" distanceClass+=FTDistance ";")*
	//	("Real" "Coordinates" ":" "[" coordinates=FTRealCoordinates "]")?
	//	"}";
	public FTObstacleElements getFTObstacleAccess() {
		return pFTObstacle;
	}
	
	public ParserRule getFTObstacleRule() {
		return getFTObstacleAccess().getRule();
	}
	
	//FTZipline:
	//	"Zipline" "=" "{"
	//	"name" ":" name=ID ";"
	//	//	"size" ":" "(" lengthX = INT "," lengthY = INT ")" ";"//INT supported
	//	"length" ":" size=FTSize ";"
	//	//	position = FTPosition//INT supported
	//	"extremities" ":" "[" startZone=[FTZone] "," endZone=[FTZone] "]" ";" ("Real" "Coordinates" ":" "["
	//	coordinates=FTRealCoordinates "]")?
	//	"}";
	public FTZiplineElements getFTZiplineAccess() {
		return pFTZipline;
	}
	
	public ParserRule getFTZiplineRule() {
		return getFTZiplineAccess().getRule();
	}
	
	////FTPosition:
	////	"LL" ":" "(" LLx = INT "," LLy = INT ")" ";"
	////;//INT supported
	//FTRealCoordinates:
	//	"Position" ":" "(" posX=INT "," posY=INT ")" ";"
	//	"Size" ":" "(" sizeX=INT "," sizeY=INT ")" ";";
	public FTRealCoordinatesElements getFTRealCoordinatesAccess() {
		return pFTRealCoordinates;
	}
	
	public ParserRule getFTRealCoordinatesRule() {
		return getFTRealCoordinatesAccess().getRule();
	}
	
	//FTDistance:
	//	"is" distance=FTDistanceValue "object" toObject=[FTObjectWithDistance];
	public FTDistanceElements getFTDistanceAccess() {
		return pFTDistance;
	}
	
	public ParserRule getFTDistanceRule() {
		return getFTDistanceAccess().getRule();
	}
	
	////////////
	////Dynamic Portion
	////////////
	//FTTrajectory:
	//	"Trajectory" "=" "{"
	//	"player" ":" player=[FTPlayer] ";"
	//	"states" ":" "{" states+=FTState* "}"
	//	"}";
	public FTTrajectoryElements getFTTrajectoryAccess() {
		return pFTTrajectory;
	}
	
	public ParserRule getFTTrajectoryRule() {
		return getFTTrajectoryAccess().getRule();
	}
	
	//FTState:
	//	"State" "=" "["
	//	"name" ":" name=ID ";"
	//	"position" ":" "(" posX=INT "," posY=INT ")" ";"
	//	observations+=FTObservation* ("nextState" ":" nextState=[FTState] ";")?
	//	"]";
	public FTStateElements getFTStateAccess() {
		return pFTState;
	}
	
	public ParserRule getFTStateRule() {
		return getFTStateAccess().getRule();
	}
	
	//////OPTION 1;
	////FTObservation:
	////	({FTDistanceObs} "distanceIs" ":" | 
	////	{FTHangingObs} "hangingFrom" ":" |
	////	{FTPickUpObs} "pickedUp" ":" | 
	////	{FTZoneObs} "inZone" ":" distance = FTDistanceValue ) object = [FTStaticObject] ";"
	////;
	////OPTION 2
	//FTObservation:
	//	FTDistanceObs | FTHangingObs | FTPickUpObs | FTZoneObs;
	public FTObservationElements getFTObservationAccess() {
		return pFTObservation;
	}
	
	public ParserRule getFTObservationRule() {
		return getFTObservationAccess().getRule();
	}
	
	//FTDistanceObs:
	//	"distanceIs" ":" distance=FTDistanceValue object=[FTObjectWithDistance] ";";
	public FTDistanceObsElements getFTDistanceObsAccess() {
		return pFTDistanceObs;
	}
	
	public ParserRule getFTDistanceObsRule() {
		return getFTDistanceObsAccess().getRule();
	}
	
	//FTHangingObs:
	//	"hangingFrom" ":" object=[FTZipline] ";";
	public FTHangingObsElements getFTHangingObsAccess() {
		return pFTHangingObs;
	}
	
	public ParserRule getFTHangingObsRule() {
		return getFTHangingObsAccess().getRule();
	}
	
	//FTPickUpObs:
	//	"pickedUp" ":" object=[FTObstacle] ";";
	public FTPickUpObsElements getFTPickUpObsAccess() {
		return pFTPickUpObs;
	}
	
	public ParserRule getFTPickUpObsRule() {
		return getFTPickUpObsAccess().getRule();
	}
	
	//FTZoneObs:
	//	"inZone" ":" object=[FTZone] ";";
	public FTZoneObsElements getFTZoneObsAccess() {
		return pFTZoneObs;
	}
	
	public ParserRule getFTZoneObsRule() {
		return getFTZoneObsAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
